{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { useContext } from 'react';\nimport { ThemeContext } from 'styled-components';\nimport { defaultProps } from '../../default-props';\nimport { TableCell } from '../TableCell';\nimport { Text } from '../Text';\nimport { datumValue } from './buildState';\n\nvar normalizeProp = function normalizeProp(name, rowProp, prop) {\n  if (rowProp && rowProp[name]) return rowProp[name];\n  return prop;\n};\n\nvar Cell = function Cell(_ref) {\n  var background = _ref.background,\n      border = _ref.border,\n      _ref$column = _ref.column,\n      align = _ref$column.align,\n      property = _ref$column.property,\n      render = _ref$column.render,\n      verticalAlign = _ref$column.verticalAlign,\n      size = _ref$column.size,\n      context = _ref.context,\n      datum = _ref.datum,\n      index = _ref.index,\n      pad = _ref.pad,\n      primaryProperty = _ref.primaryProperty,\n      rowProp = _ref.rowProp,\n      scope = _ref.scope;\n  var theme = useContext(ThemeContext) || defaultProps.theme;\n  var value = datumValue(datum, property);\n  var content;\n\n  if (render) {\n    content = render(datum);\n  } else if (value !== undefined) {\n    content = value;\n  }\n\n  if (typeof content === 'string' || typeof content === 'number') {\n    var textProps = property === primaryProperty ? theme.dataTable.primary : {};\n    content = /*#__PURE__*/React.createElement(Text, textProps, content);\n  }\n\n  return /*#__PURE__*/React.createElement(TableCell, _extends({\n    scope: scope\n  }, theme.dataTable[context], {\n    align: align,\n    verticalAlign: verticalAlign,\n    size: size,\n    background: normalizeProp('background', rowProp, Array.isArray(background) ? background[index % background.length] : background),\n    border: normalizeProp('border', rowProp, border),\n    pad: normalizeProp('pad', rowProp, pad)\n  }), content);\n};\n\nCell.displayName = 'Cell';\nCell.defaultProps = {};\nObject.setPrototypeOf(Cell.defaultProps, defaultProps);\nexport { Cell };","map":{"version":3,"sources":["/Users/erwanbeguin/Documents/Developper/ynov/dataviz/node_modules/grommet/es6/components/DataTable/Cell.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","useContext","ThemeContext","defaultProps","TableCell","Text","datumValue","normalizeProp","name","rowProp","prop","Cell","_ref","background","border","_ref$column","column","align","property","render","verticalAlign","size","context","datum","index","pad","primaryProperty","scope","theme","value","content","undefined","textProps","dataTable","primary","createElement","Array","isArray","displayName","setPrototypeOf"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useContext } from 'react';\nimport { ThemeContext } from 'styled-components';\nimport { defaultProps } from '../../default-props';\nimport { TableCell } from '../TableCell';\nimport { Text } from '../Text';\nimport { datumValue } from './buildState';\n\nvar normalizeProp = function normalizeProp(name, rowProp, prop) {\n  if (rowProp && rowProp[name]) return rowProp[name];\n  return prop;\n};\n\nvar Cell = function Cell(_ref) {\n  var background = _ref.background,\n      border = _ref.border,\n      _ref$column = _ref.column,\n      align = _ref$column.align,\n      property = _ref$column.property,\n      render = _ref$column.render,\n      verticalAlign = _ref$column.verticalAlign,\n      size = _ref$column.size,\n      context = _ref.context,\n      datum = _ref.datum,\n      index = _ref.index,\n      pad = _ref.pad,\n      primaryProperty = _ref.primaryProperty,\n      rowProp = _ref.rowProp,\n      scope = _ref.scope;\n  var theme = useContext(ThemeContext) || defaultProps.theme;\n  var value = datumValue(datum, property);\n  var content;\n\n  if (render) {\n    content = render(datum);\n  } else if (value !== undefined) {\n    content = value;\n  }\n\n  if (typeof content === 'string' || typeof content === 'number') {\n    var textProps = property === primaryProperty ? theme.dataTable.primary : {};\n    content = /*#__PURE__*/React.createElement(Text, textProps, content);\n  }\n\n  return /*#__PURE__*/React.createElement(TableCell, _extends({\n    scope: scope\n  }, theme.dataTable[context], {\n    align: align,\n    verticalAlign: verticalAlign,\n    size: size,\n    background: normalizeProp('background', rowProp, Array.isArray(background) ? background[index % background.length] : background),\n    border: normalizeProp('border', rowProp, border),\n    pad: normalizeProp('pad', rowProp, pad)\n  }), content);\n};\n\nCell.displayName = 'Cell';\nCell.defaultProps = {};\nObject.setPrototypeOf(Cell.defaultProps, defaultProps);\nexport { Cell };"]},"metadata":{},"sourceType":"module"}