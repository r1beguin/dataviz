{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { forwardRef, useLayoutEffect, useMemo, useRef, useState } from 'react';\nimport { Box } from '../Box';\nimport { Chart, calcs, calcBounds } from '../Chart';\nimport { Grid } from '../Grid';\nimport { Stack } from '../Stack';\nimport { Detail } from './Detail';\nimport { Legend } from './Legend';\nimport { XAxis } from './XAxis';\nimport { YAxis } from './YAxis';\nimport { XGuide } from './XGuide';\nimport { YGuide } from './YGuide';\nimport { createDateFormat, halfPad, heightYGranularity, points } from './utils'; // DataChart takes a generic data array of objects plus as few properties\n// as possible, and creates a Stack of Charts with x and y axes, a legend,\n// and interactive detail.\n// Much of the code here-in involves the \"few properties\" aspect where we\n// normalize and automatically handle whatever the caller didn't specify.\n\nvar DataChart = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var a11yTitle = _ref.a11yTitle,\n      _ref$axis = _ref.axis,\n      axisProp = _ref$axis === void 0 ? true : _ref$axis,\n      _ref$bounds = _ref.bounds,\n      boundsProp = _ref$bounds === void 0 ? 'align' : _ref$bounds,\n      chart = _ref.chart,\n      _ref$data = _ref.data,\n      data = _ref$data === void 0 ? [] : _ref$data,\n      detail = _ref.detail,\n      _ref$gap = _ref.gap,\n      gap = _ref$gap === void 0 ? 'small' : _ref$gap,\n      guideProp = _ref.guide,\n      legend = _ref.legend,\n      padProp = _ref.pad,\n      seriesProp = _ref.series,\n      size = _ref.size,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"a11yTitle\", \"axis\", \"bounds\", \"chart\", \"data\", \"detail\", \"gap\", \"guide\", \"legend\", \"pad\", \"series\", \"size\"]); // legend interaction, if any\n\n\n  var _useState = useState(),\n      activeProperty = _useState[0],\n      setActiveProperty = _useState[1]; // refs used for ie11 not having Grid\n\n\n  var xRef = useRef();\n  var spacerRef = useRef(); // normalize seriesProp to an array of objects, one per property\n\n  var series = useMemo(function () {\n    if (Array.isArray(seriesProp)) return seriesProp.map(function (s) {\n      return typeof s === 'string' ? {\n        property: s\n      } : s;\n    });\n    if (typeof seriesProp === 'string') return [{\n      property: seriesProp\n    }];\n    return [seriesProp];\n  }, [seriesProp]);\n\n  var getPropertySeries = function getPropertySeries(prop) {\n    return series.find(function (_ref2) {\n      var property = _ref2.property;\n      return prop === property;\n    });\n  }; // Normalize chart to an array of objects.\n  // Each chart has one or more properties associated with it.\n  // A stacked bar chart has an array of properties.\n  // A point chart can have x, y, thickness, and color each driven\n  // by a separate property.\n\n\n  var charts = useMemo(function () {\n    if (!chart) {\n      if (series.length === 1) return series.map(function (s) {\n        return {\n          property: s.property\n        };\n      }); // if we have more than one property, we'll use the first for\n      // the x-axis and we'll plot the rest\n\n      return series.slice(1).map(function (s) {\n        return {\n          property: s.property\n        };\n      });\n    }\n\n    if (Array.isArray(chart)) return chart.map(function (c) {\n      return typeof c === 'string' ? {\n        property: c\n      } : c;\n    });\n    return typeof chart === 'string' ? [{\n      property: chart\n    }] : [chart];\n  }, [chart, series]); // map the series property values into their own arrays\n\n  var seriesValues = useMemo(function () {\n    var result = {};\n    series.forEach(function (_ref3) {\n      var property = _ref3.property;\n      result[property] = data.map(function (d) {\n        return d[property];\n      });\n    });\n    return result;\n  }, [data, series]); // Setup the values property for each chart.\n  // The index into 'charts' can be used to index into 'chartValues'.\n\n  var chartValues = useMemo(function () {\n    return charts.map(function (_ref4) {\n      var opacity = _ref4.opacity,\n          property = _ref4.property,\n          type = _ref4.type;\n\n      if (property) {\n        if (Array.isArray(property)) {\n          // A range chart or a stacked bar chart have multiple properties.\n          // In this case, this returns an array of values,\n          // one per property.\n          if (type === 'bars') {\n            // Further down, where we render, each property is rendered\n            // using a separate Chart component and the values are stacked\n            // such that they line up appropriately.\n            var totals = [];\n            return property.map(function (cp) {\n              return seriesValues[cp].map(function (v, i) {\n                var base = totals[i] || 0;\n                totals[i] = base + v;\n                return [i, base, base + v];\n              });\n            });\n          }\n\n          return data.map(function (_, index) {\n            return [index].concat(property.map(function (p) {\n              return seriesValues[p] ? seriesValues[p][index] : data[index][p];\n            }));\n          });\n        }\n\n        if (typeof property === 'object') {\n          // When 'property' is an array, the keys of this array indicate\n          // which property drives which part of the rendered Chart.\n          var color = property.color,\n              thickness = property.thickness,\n              x = property.x,\n              y = property.y,\n              y2 = property.y2;\n          return seriesValues[x].map(function (value, index) {\n            var aValue = {\n              value: [value]\n            };\n            aValue.value.push(seriesValues[y][index]);\n            if (y2) aValue.value.push(seriesValues[y2][index]);\n\n            if (thickness) {\n              var t = seriesValues[thickness.property || thickness][index];\n              aValue.thickness = thickness.transform ? thickness.transform(t) : t;\n            }\n\n            if (color) {\n              var c = seriesValues[color.property || color][index];\n              aValue.color = color.transform ? color.transform(c) : c;\n            }\n\n            if (opacity) aValue.opacity = opacity;\n            return aValue;\n          });\n        }\n\n        return seriesValues[property];\n      }\n\n      return undefined;\n    });\n  }, [charts, data, seriesValues]); // map granularities to work well with the number of data points we have\n\n  var granularities = useMemo(function () {\n    var medium;\n    [10, 9, 8, 7, 6, 5, 4, 3, 2].some(function (i) {\n      if (data.length % i === 0) medium = i;\n      return medium;\n    });\n    if (!medium) medium = 3;\n    return {\n      x: {\n        coarse: 2,\n        fine: data.length,\n        medium: medium\n      },\n      y: _extends({}, heightYGranularity[size && size.height || 'small'] || {\n        fine: 5,\n        medium: 3\n      }, {\n        coarse: 2\n      })\n    };\n  }, [data.length, size]); // normalize axis to objects, convert granularity to a number\n\n  var axis = useMemo(function () {\n    if (!axisProp) return undefined;\n    var result = {};\n    if (axisProp === true || axisProp.x === true) result.x = {};\n    if (axisProp === true || axisProp.y === true) result.y = {};\n    if (!result.x && axisProp.x) result.x = typeof axisProp.x === 'string' ? {\n      property: axisProp.x\n    } : _extends({}, axisProp.x);\n    if (!result.y && axisProp.y) result.y = typeof axisProp.y === 'string' ? {\n      property: axisProp.y\n    } : _extends({}, axisProp.y);\n\n    if (result.x) {\n      if (!result.x.property) {\n        // see if we have a point chart that has an x property\n        if (data && data[0]) {\n          if (data[0].date) result.x.property = 'date';else if (data[0].time) result.x.property = 'time';\n        }\n      }\n\n      if (!result.x.granularity) result.x.granularity = 'coarse';\n    }\n\n    if (result.y) {\n      if (!result.y.property && charts[0]) // see if we have a point chart that has an x property\n        result.y.property = charts[0].property.y || charts[0].property;\n      if (!result.y.granularity) result.y.granularity = 'coarse';\n    } // calculate number of entries based on granularity\n\n\n    if (result.x) {\n      var _result$x$granularity = result.x.granularity,\n          granularity = _result$x$granularity === void 0 ? 'coarse' : _result$x$granularity;\n      result.x.count = granularities.x[granularity];\n    }\n\n    if (result.y) {\n      var _result$y$granularity = result.y.granularity,\n          _granularity = _result$y$granularity === void 0 ? 'coarse' : _result$y$granularity;\n\n      result.y.count = granularities.y[_granularity];\n    }\n\n    return result;\n  }, [axisProp, data, charts, granularities]); // calculate axis, bounds, and thickness for each chart\n\n  var chartProps = useMemo(function () {\n    var steps = [];\n    var coarseness = [undefined, 5];\n\n    if (axis && axis.x) {\n      var _axis$x$granularity = axis.x.granularity,\n          granularity = _axis$x$granularity === void 0 ? 'coarse' : _axis$x$granularity;\n      steps[0] = granularities.x[granularity] - 1;\n    } else steps[0] = data.length - 1;\n\n    if (axis && axis.y) {\n      var _axis$y$granularity = axis.y.granularity,\n          _granularity2 = _axis$y$granularity === void 0 ? 'coarse' : _axis$y$granularity;\n\n      steps[1] = granularities.y[_granularity2] - 1;\n    } else steps[1] = 1;\n\n    var chartBounds = chartValues.map(function (_, index) {\n      if (charts[index].type === 'bars') {\n        // merge values for bars case\n        var mergedValues = chartValues[index][0].slice(0);\n        chartValues[index].slice(1).forEach(function (values) {\n          mergedValues = mergedValues.map(function (__, i) {\n            return [i, Math.min(mergedValues[i][1], values[i][1]), Math.max(mergedValues[i][2], values[i][2])];\n          });\n        });\n        return calcBounds(mergedValues, {\n          coarseness: coarseness,\n          steps: steps\n        });\n      } // if this is a data driven x chart, set coarseness for x\n\n\n      return calcBounds(chartValues[index], {\n        coarseness: charts[index].property.x ? [5, 5] : coarseness,\n        steps: steps\n      });\n    });\n\n    if (boundsProp === 'align') {\n      var alignedBounds = [].concat(chartBounds[0]);\n      chartBounds.forEach(function (bounds) {\n        alignedBounds[0][0] = Math.min(alignedBounds[0][0], bounds[0][0]);\n        alignedBounds[0][1] = Math.max(alignedBounds[0][1], bounds[0][1]);\n        alignedBounds[1][0] = Math.min(alignedBounds[1][0], bounds[1][0]);\n        alignedBounds[1][1] = Math.max(alignedBounds[1][1], bounds[1][1]);\n      });\n      chartBounds = chartBounds.map(function () {\n        return alignedBounds;\n      });\n    }\n\n    return chartValues.map(function (values, index) {\n      var calcValues = charts[index].type === 'bars' ? values[0] : values;\n      return calcs(calcValues, {\n        bounds: chartBounds[index],\n        steps: steps\n      });\n    });\n  }, [axis, boundsProp, charts, chartValues, data, granularities]); // normalize how we style data properties for use by Legend and Detail\n\n  var seriesStyles = useMemo(function () {\n    var result = {}; // start from what we were explicitly given\n\n    charts.forEach(function (_ref5, index) {\n      var color = _ref5.color,\n          point = _ref5.point,\n          property = _ref5.property,\n          thickness = _ref5.thickness,\n          type = _ref5.type;\n      var calcThickness = chartProps[index].thickness;\n\n      if (typeof property === 'object' && !Array.isArray(property)) {\n        // data driven point chart\n        Object.keys(property).forEach(function (aspect) {\n          var prop = property[aspect];\n          if (!result[prop.property || prop]) result[prop.property || prop] = {\n            aspect: aspect\n          };\n        });\n      } else {\n        var props = Array.isArray(property) ? property : [property];\n        props.forEach(function (prop) {\n          var p = prop.property || prop;\n          if (!result[p]) result[p] = {};\n          if (color && !result[p].color) result[p].color = color;\n          if (point && !result[p].point) result[p].point = point;else if (type === 'point') result[p].point = false;\n          if ((thickness || calcThickness) && !result[p].thickness) result[p].thickness = thickness || calcThickness;\n        });\n      }\n    }); // set color for any non-aspect properties we don't have one for yet\n\n    var colorIndex = 0;\n    var pointIndex = 0;\n    Object.keys(result).forEach(function (key) {\n      var seriesStyle = result[key];\n\n      if (!seriesStyle.aspect && !seriesStyle.color) {\n        seriesStyle.color = \"graph-\" + colorIndex;\n        colorIndex += 1;\n      } // set opacity if it isn't set and this isn't the active property\n\n\n      if (activeProperty !== undefined && activeProperty !== key) {\n        seriesStyle.opacity = 'medium';\n      }\n\n      if (seriesStyle.point === false) {\n        seriesStyle.point = points[pointIndex];\n        pointIndex += 1;\n      }\n    });\n    return result;\n  }, [activeProperty, charts, chartProps]); // normalize guide\n\n  var guide = useMemo(function () {\n    if (!guideProp) return undefined;\n    var result;\n\n    if (guideProp === true) {\n      result = {\n        x: {},\n        y: {}\n      };\n    } else {\n      result = {};\n      if (guideProp.x) result.x = _extends({}, guideProp.x);\n      if (guideProp.y) result.y = _extends({}, guideProp.y);\n    } // set counts\n\n\n    if (result.x) {\n      // if no granularity and axis, align count with axis\n      if (!result.x.granularity && axis && axis.x) result.x.count = axis.x.count;\n      if (!result.x.count) result.x.count = granularities.x[result.x.granularity || 'coarse'];\n    }\n\n    if (result.y) {\n      // if no granularity and axis, align count with axis\n      if (!result.y.granularity && axis && axis.y) result.y.count = axis.y.count;\n      if (!result.y.count) result.y.count = granularities.y[result.y.granularity || 'coarse'];\n    }\n\n    return result;\n  }, [axis, granularities, guideProp]); // set the pad to half the thickness, based on the chart types\n\n  var pad = useMemo(function () {\n    if (padProp !== undefined) return padProp;\n    var result = {};\n    charts.forEach(function (_ref6, index) {\n      var type = _ref6.type;\n      var thickness = chartProps[index].thickness;\n      result.horizontal = halfPad[thickness];\n      if (type && type !== 'bar') result.vertical = halfPad[thickness];\n    });\n    return result;\n  }, [chartProps, charts, padProp]);\n  var dateFormats = useMemo(function () {\n    var result = {};\n    var full = axis && axis.x && axis.x.granularity === 'coarse';\n    series.forEach(function (_ref7) {\n      var property = _ref7.property,\n          render = _ref7.render;\n\n      if (!render && data.length > 1 && typeof data[0][property] === 'string') {\n        result[property] = createDateFormat(data[0][property], data[data.length - 1][property], full);\n      }\n    });\n    return result;\n  }, [axis, data, series]); // for ie11, align the spacer Box height to the x-axis height\n\n  useLayoutEffect(function () {\n    if (xRef.current && spacerRef.current) {\n      var rect = xRef.current.getBoundingClientRect();\n      spacerRef.current.style.height = rect.height + \"px\";\n    }\n  }, []);\n\n  var renderValue = function renderValue(serie, dataIndex, valueArg) {\n    var value;\n\n    if (valueArg !== undefined) {\n      if (serie && serie.render) return serie.render(valueArg);\n      value = valueArg;\n    } else {\n      var datum = data[dataIndex];\n      value = datum[serie.property];\n      if (serie && serie.render) return serie.render(value, datum, serie.property);\n    }\n\n    if (serie) {\n      var dateFormat = dateFormats[serie.property];\n      if (dateFormat) return dateFormat(new Date(value));\n      if (serie.prefix) value = \"\" + serie.prefix + value;\n      if (serie.suffix) value = \"\" + value + serie.suffix;\n    }\n\n    return value;\n  }; // TODO: revisit how x/y axis are hooked up to charts and series\n\n\n  var xAxisElement = axis && axis.x ? /*#__PURE__*/React.createElement(XAxis, {\n    ref: xRef,\n    axis: axis,\n    chartProps: chartProps,\n    data: data,\n    renderValue: renderValue,\n    serie: axis.x.property && getPropertySeries(axis.x.property)\n  }) : null;\n  var yAxisElement = axis && axis.y ? /*#__PURE__*/React.createElement(YAxis, {\n    axis: axis,\n    chartProps: chartProps,\n    pad: pad,\n    renderValue: renderValue,\n    serie: axis.y.property && getPropertySeries(axis.y.property)\n  }) : null;\n  var stackFill = useMemo(function () {\n    if (size === 'fill' || size && size.width === 'fill' && size.height === 'fill') return true;\n    if (size && size.width === 'fill') return 'horizontal';\n    if (size && size.height === 'fill') return 'vertical';\n    return undefined;\n  }, [size]);\n  var guidingChild = useMemo(function () {\n    var result = 0;\n    if (guide && guide.x) result += 1;\n    if (guide && guide.y) result += 1;\n    return result;\n  }, [guide]);\n  var stackElement = /*#__PURE__*/React.createElement(Stack, {\n    gridArea: \"charts\",\n    guidingChild: guidingChild,\n    fill: stackFill\n  }, guide && guide.x && /*#__PURE__*/React.createElement(XGuide, {\n    guide: guide,\n    pad: pad\n  }), guide && guide.y && /*#__PURE__*/React.createElement(YGuide, {\n    guide: guide,\n    pad: pad\n  }), charts.map(function (_ref8, i) {\n    var prop = _ref8.property,\n        type = _ref8.type,\n        x = _ref8.x,\n        y = _ref8.y,\n        chartRest = _objectWithoutPropertiesLoose(_ref8, [\"property\", \"type\", \"x\", \"y\"]);\n\n    if (type === 'bars') {\n      // reverse to ensure area Charts are stacked in the right order\n      return prop.map(function (cProp, j) {\n        return /*#__PURE__*/React.createElement(Chart // eslint-disable-next-line react/no-array-index-key\n        , _extends({\n          key: j,\n          values: chartValues[i][j],\n          overflow: true\n        }, seriesStyles[cProp], chartProps[i], chartRest, {\n          type: \"bar\",\n          size: size,\n          pad: pad\n        }));\n      }).reverse();\n    }\n\n    return /*#__PURE__*/React.createElement(Chart // eslint-disable-next-line react/no-array-index-key\n    , _extends({\n      key: i,\n      values: chartValues[i],\n      overflow: true\n    }, seriesStyles[prop], chartProps[i], chartRest, {\n      type: type,\n      size: size,\n      pad: pad\n    }));\n  }), detail && /*#__PURE__*/React.createElement(Detail, {\n    activeProperty: activeProperty,\n    axis: axis,\n    data: data,\n    series: series,\n    seriesStyles: seriesStyles,\n    renderValue: renderValue\n  }));\n  var legendElement = legend ? /*#__PURE__*/React.createElement(Legend, {\n    series: series,\n    seriesStyles: seriesStyles,\n    activeProperty: activeProperty,\n    setActiveProperty: setActiveProperty\n  }) : null; // IE11\n\n  if (!Grid.available) {\n    var _content = stackElement;\n\n    if (xAxisElement) {\n      _content = /*#__PURE__*/React.createElement(Box, null, _content, xAxisElement);\n    }\n\n    if (yAxisElement) {\n      _content = /*#__PURE__*/React.createElement(Box, {\n        direction: \"row\"\n      }, /*#__PURE__*/React.createElement(Box, null, yAxisElement, /*#__PURE__*/React.createElement(Box, {\n        ref: spacerRef,\n        flex: false\n      })), _content);\n    }\n\n    if (legendElement) {\n      _content = /*#__PURE__*/React.createElement(Box, null, _content, legendElement);\n    }\n\n    return _content;\n  }\n\n  var content = /*#__PURE__*/React.createElement(Grid, _extends({\n    ref: ref,\n    \"aria-label\": a11yTitle,\n    fill: stackFill,\n    columns: ['auto', stackFill === true || stackFill === 'horizontal' ? 'flex' : 'auto'],\n    rows: [stackFill === true || stackFill === 'vertical' ? 'flex' : 'auto', 'auto'],\n    areas: [{\n      name: 'yAxis',\n      start: [0, 0],\n      end: [0, 0]\n    }, {\n      name: 'xAxis',\n      start: [1, 1],\n      end: [1, 1]\n    }, {\n      name: 'charts',\n      start: [1, 0],\n      end: [1, 0]\n    }],\n    gap: gap\n  }, rest), xAxisElement, yAxisElement, stackElement);\n\n  if (legendElement) {\n    content = /*#__PURE__*/React.createElement(Box, {\n      align: \"start\"\n    }, content, legendElement);\n  }\n\n  return content;\n});\nDataChart.displayName = 'DataChart';\nvar DataChartDoc;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line global-require\n  DataChartDoc = require('./doc').doc(DataChart);\n}\n\nvar DataChartWrapper = DataChartDoc || DataChart;\nexport { DataChartWrapper as DataChart };","map":{"version":3,"sources":["/Users/erwanbeguin/Documents/Developper/ynov/dataviz/node_modules/grommet/es6/components/DataChart/DataChart.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","React","forwardRef","useLayoutEffect","useMemo","useRef","useState","Box","Chart","calcs","calcBounds","Grid","Stack","Detail","Legend","XAxis","YAxis","XGuide","YGuide","createDateFormat","halfPad","heightYGranularity","points","DataChart","_ref","ref","a11yTitle","_ref$axis","axis","axisProp","_ref$bounds","bounds","boundsProp","chart","_ref$data","data","detail","_ref$gap","gap","guideProp","guide","legend","padProp","pad","seriesProp","series","size","rest","_useState","activeProperty","setActiveProperty","xRef","spacerRef","Array","isArray","map","s","property","getPropertySeries","prop","find","_ref2","charts","slice","c","seriesValues","result","forEach","_ref3","d","chartValues","_ref4","opacity","type","totals","cp","v","base","_","index","concat","p","color","thickness","x","y","y2","value","aValue","push","t","transform","undefined","granularities","medium","some","coarse","fine","height","date","time","granularity","_result$x$granularity","count","_result$y$granularity","_granularity","chartProps","steps","coarseness","_axis$x$granularity","_axis$y$granularity","_granularity2","chartBounds","mergedValues","values","__","Math","min","max","alignedBounds","calcValues","seriesStyles","_ref5","point","calcThickness","aspect","props","colorIndex","pointIndex","seriesStyle","_ref6","horizontal","vertical","dateFormats","full","_ref7","render","current","rect","getBoundingClientRect","style","renderValue","serie","dataIndex","valueArg","datum","dateFormat","Date","prefix","suffix","xAxisElement","createElement","yAxisElement","stackFill","width","guidingChild","stackElement","gridArea","fill","_ref8","chartRest","cProp","j","overflow","reverse","legendElement","available","_content","direction","flex","content","columns","rows","areas","name","start","end","align","displayName","DataChartDoc","process","env","NODE_ENV","require","doc","DataChartWrapper"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef, useLayoutEffect, useMemo, useRef, useState } from 'react';\nimport { Box } from '../Box';\nimport { Chart, calcs, calcBounds } from '../Chart';\nimport { Grid } from '../Grid';\nimport { Stack } from '../Stack';\nimport { Detail } from './Detail';\nimport { Legend } from './Legend';\nimport { XAxis } from './XAxis';\nimport { YAxis } from './YAxis';\nimport { XGuide } from './XGuide';\nimport { YGuide } from './YGuide';\nimport { createDateFormat, halfPad, heightYGranularity, points } from './utils'; // DataChart takes a generic data array of objects plus as few properties\n// as possible, and creates a Stack of Charts with x and y axes, a legend,\n// and interactive detail.\n// Much of the code here-in involves the \"few properties\" aspect where we\n// normalize and automatically handle whatever the caller didn't specify.\n\nvar DataChart = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var a11yTitle = _ref.a11yTitle,\n      _ref$axis = _ref.axis,\n      axisProp = _ref$axis === void 0 ? true : _ref$axis,\n      _ref$bounds = _ref.bounds,\n      boundsProp = _ref$bounds === void 0 ? 'align' : _ref$bounds,\n      chart = _ref.chart,\n      _ref$data = _ref.data,\n      data = _ref$data === void 0 ? [] : _ref$data,\n      detail = _ref.detail,\n      _ref$gap = _ref.gap,\n      gap = _ref$gap === void 0 ? 'small' : _ref$gap,\n      guideProp = _ref.guide,\n      legend = _ref.legend,\n      padProp = _ref.pad,\n      seriesProp = _ref.series,\n      size = _ref.size,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"a11yTitle\", \"axis\", \"bounds\", \"chart\", \"data\", \"detail\", \"gap\", \"guide\", \"legend\", \"pad\", \"series\", \"size\"]);\n\n  // legend interaction, if any\n  var _useState = useState(),\n      activeProperty = _useState[0],\n      setActiveProperty = _useState[1]; // refs used for ie11 not having Grid\n\n\n  var xRef = useRef();\n  var spacerRef = useRef(); // normalize seriesProp to an array of objects, one per property\n\n  var series = useMemo(function () {\n    if (Array.isArray(seriesProp)) return seriesProp.map(function (s) {\n      return typeof s === 'string' ? {\n        property: s\n      } : s;\n    });\n    if (typeof seriesProp === 'string') return [{\n      property: seriesProp\n    }];\n    return [seriesProp];\n  }, [seriesProp]);\n\n  var getPropertySeries = function getPropertySeries(prop) {\n    return series.find(function (_ref2) {\n      var property = _ref2.property;\n      return prop === property;\n    });\n  }; // Normalize chart to an array of objects.\n  // Each chart has one or more properties associated with it.\n  // A stacked bar chart has an array of properties.\n  // A point chart can have x, y, thickness, and color each driven\n  // by a separate property.\n\n\n  var charts = useMemo(function () {\n    if (!chart) {\n      if (series.length === 1) return series.map(function (s) {\n        return {\n          property: s.property\n        };\n      }); // if we have more than one property, we'll use the first for\n      // the x-axis and we'll plot the rest\n\n      return series.slice(1).map(function (s) {\n        return {\n          property: s.property\n        };\n      });\n    }\n\n    if (Array.isArray(chart)) return chart.map(function (c) {\n      return typeof c === 'string' ? {\n        property: c\n      } : c;\n    });\n    return typeof chart === 'string' ? [{\n      property: chart\n    }] : [chart];\n  }, [chart, series]); // map the series property values into their own arrays\n\n  var seriesValues = useMemo(function () {\n    var result = {};\n    series.forEach(function (_ref3) {\n      var property = _ref3.property;\n      result[property] = data.map(function (d) {\n        return d[property];\n      });\n    });\n    return result;\n  }, [data, series]); // Setup the values property for each chart.\n  // The index into 'charts' can be used to index into 'chartValues'.\n\n  var chartValues = useMemo(function () {\n    return charts.map(function (_ref4) {\n      var opacity = _ref4.opacity,\n          property = _ref4.property,\n          type = _ref4.type;\n\n      if (property) {\n        if (Array.isArray(property)) {\n          // A range chart or a stacked bar chart have multiple properties.\n          // In this case, this returns an array of values,\n          // one per property.\n          if (type === 'bars') {\n            // Further down, where we render, each property is rendered\n            // using a separate Chart component and the values are stacked\n            // such that they line up appropriately.\n            var totals = [];\n            return property.map(function (cp) {\n              return seriesValues[cp].map(function (v, i) {\n                var base = totals[i] || 0;\n                totals[i] = base + v;\n                return [i, base, base + v];\n              });\n            });\n          }\n\n          return data.map(function (_, index) {\n            return [index].concat(property.map(function (p) {\n              return seriesValues[p] ? seriesValues[p][index] : data[index][p];\n            }));\n          });\n        }\n\n        if (typeof property === 'object') {\n          // When 'property' is an array, the keys of this array indicate\n          // which property drives which part of the rendered Chart.\n          var color = property.color,\n              thickness = property.thickness,\n              x = property.x,\n              y = property.y,\n              y2 = property.y2;\n          return seriesValues[x].map(function (value, index) {\n            var aValue = {\n              value: [value]\n            };\n            aValue.value.push(seriesValues[y][index]);\n            if (y2) aValue.value.push(seriesValues[y2][index]);\n\n            if (thickness) {\n              var t = seriesValues[thickness.property || thickness][index];\n              aValue.thickness = thickness.transform ? thickness.transform(t) : t;\n            }\n\n            if (color) {\n              var c = seriesValues[color.property || color][index];\n              aValue.color = color.transform ? color.transform(c) : c;\n            }\n\n            if (opacity) aValue.opacity = opacity;\n            return aValue;\n          });\n        }\n\n        return seriesValues[property];\n      }\n\n      return undefined;\n    });\n  }, [charts, data, seriesValues]); // map granularities to work well with the number of data points we have\n\n  var granularities = useMemo(function () {\n    var medium;\n    [10, 9, 8, 7, 6, 5, 4, 3, 2].some(function (i) {\n      if (data.length % i === 0) medium = i;\n      return medium;\n    });\n    if (!medium) medium = 3;\n    return {\n      x: {\n        coarse: 2,\n        fine: data.length,\n        medium: medium\n      },\n      y: _extends({}, heightYGranularity[size && size.height || 'small'] || {\n        fine: 5,\n        medium: 3\n      }, {\n        coarse: 2\n      })\n    };\n  }, [data.length, size]); // normalize axis to objects, convert granularity to a number\n\n  var axis = useMemo(function () {\n    if (!axisProp) return undefined;\n    var result = {};\n    if (axisProp === true || axisProp.x === true) result.x = {};\n    if (axisProp === true || axisProp.y === true) result.y = {};\n    if (!result.x && axisProp.x) result.x = typeof axisProp.x === 'string' ? {\n      property: axisProp.x\n    } : _extends({}, axisProp.x);\n    if (!result.y && axisProp.y) result.y = typeof axisProp.y === 'string' ? {\n      property: axisProp.y\n    } : _extends({}, axisProp.y);\n\n    if (result.x) {\n      if (!result.x.property) {\n        // see if we have a point chart that has an x property\n        if (data && data[0]) {\n          if (data[0].date) result.x.property = 'date';else if (data[0].time) result.x.property = 'time';\n        }\n      }\n\n      if (!result.x.granularity) result.x.granularity = 'coarse';\n    }\n\n    if (result.y) {\n      if (!result.y.property && charts[0]) // see if we have a point chart that has an x property\n        result.y.property = charts[0].property.y || charts[0].property;\n      if (!result.y.granularity) result.y.granularity = 'coarse';\n    } // calculate number of entries based on granularity\n\n\n    if (result.x) {\n      var _result$x$granularity = result.x.granularity,\n          granularity = _result$x$granularity === void 0 ? 'coarse' : _result$x$granularity;\n      result.x.count = granularities.x[granularity];\n    }\n\n    if (result.y) {\n      var _result$y$granularity = result.y.granularity,\n          _granularity = _result$y$granularity === void 0 ? 'coarse' : _result$y$granularity;\n\n      result.y.count = granularities.y[_granularity];\n    }\n\n    return result;\n  }, [axisProp, data, charts, granularities]); // calculate axis, bounds, and thickness for each chart\n\n  var chartProps = useMemo(function () {\n    var steps = [];\n    var coarseness = [undefined, 5];\n\n    if (axis && axis.x) {\n      var _axis$x$granularity = axis.x.granularity,\n          granularity = _axis$x$granularity === void 0 ? 'coarse' : _axis$x$granularity;\n      steps[0] = granularities.x[granularity] - 1;\n    } else steps[0] = data.length - 1;\n\n    if (axis && axis.y) {\n      var _axis$y$granularity = axis.y.granularity,\n          _granularity2 = _axis$y$granularity === void 0 ? 'coarse' : _axis$y$granularity;\n\n      steps[1] = granularities.y[_granularity2] - 1;\n    } else steps[1] = 1;\n\n    var chartBounds = chartValues.map(function (_, index) {\n      if (charts[index].type === 'bars') {\n        // merge values for bars case\n        var mergedValues = chartValues[index][0].slice(0);\n        chartValues[index].slice(1).forEach(function (values) {\n          mergedValues = mergedValues.map(function (__, i) {\n            return [i, Math.min(mergedValues[i][1], values[i][1]), Math.max(mergedValues[i][2], values[i][2])];\n          });\n        });\n        return calcBounds(mergedValues, {\n          coarseness: coarseness,\n          steps: steps\n        });\n      } // if this is a data driven x chart, set coarseness for x\n\n\n      return calcBounds(chartValues[index], {\n        coarseness: charts[index].property.x ? [5, 5] : coarseness,\n        steps: steps\n      });\n    });\n\n    if (boundsProp === 'align') {\n      var alignedBounds = [].concat(chartBounds[0]);\n      chartBounds.forEach(function (bounds) {\n        alignedBounds[0][0] = Math.min(alignedBounds[0][0], bounds[0][0]);\n        alignedBounds[0][1] = Math.max(alignedBounds[0][1], bounds[0][1]);\n        alignedBounds[1][0] = Math.min(alignedBounds[1][0], bounds[1][0]);\n        alignedBounds[1][1] = Math.max(alignedBounds[1][1], bounds[1][1]);\n      });\n      chartBounds = chartBounds.map(function () {\n        return alignedBounds;\n      });\n    }\n\n    return chartValues.map(function (values, index) {\n      var calcValues = charts[index].type === 'bars' ? values[0] : values;\n      return calcs(calcValues, {\n        bounds: chartBounds[index],\n        steps: steps\n      });\n    });\n  }, [axis, boundsProp, charts, chartValues, data, granularities]); // normalize how we style data properties for use by Legend and Detail\n\n  var seriesStyles = useMemo(function () {\n    var result = {}; // start from what we were explicitly given\n\n    charts.forEach(function (_ref5, index) {\n      var color = _ref5.color,\n          point = _ref5.point,\n          property = _ref5.property,\n          thickness = _ref5.thickness,\n          type = _ref5.type;\n      var calcThickness = chartProps[index].thickness;\n\n      if (typeof property === 'object' && !Array.isArray(property)) {\n        // data driven point chart\n        Object.keys(property).forEach(function (aspect) {\n          var prop = property[aspect];\n          if (!result[prop.property || prop]) result[prop.property || prop] = {\n            aspect: aspect\n          };\n        });\n      } else {\n        var props = Array.isArray(property) ? property : [property];\n        props.forEach(function (prop) {\n          var p = prop.property || prop;\n          if (!result[p]) result[p] = {};\n          if (color && !result[p].color) result[p].color = color;\n          if (point && !result[p].point) result[p].point = point;else if (type === 'point') result[p].point = false;\n          if ((thickness || calcThickness) && !result[p].thickness) result[p].thickness = thickness || calcThickness;\n        });\n      }\n    }); // set color for any non-aspect properties we don't have one for yet\n\n    var colorIndex = 0;\n    var pointIndex = 0;\n    Object.keys(result).forEach(function (key) {\n      var seriesStyle = result[key];\n\n      if (!seriesStyle.aspect && !seriesStyle.color) {\n        seriesStyle.color = \"graph-\" + colorIndex;\n        colorIndex += 1;\n      } // set opacity if it isn't set and this isn't the active property\n\n\n      if (activeProperty !== undefined && activeProperty !== key) {\n        seriesStyle.opacity = 'medium';\n      }\n\n      if (seriesStyle.point === false) {\n        seriesStyle.point = points[pointIndex];\n        pointIndex += 1;\n      }\n    });\n    return result;\n  }, [activeProperty, charts, chartProps]); // normalize guide\n\n  var guide = useMemo(function () {\n    if (!guideProp) return undefined;\n    var result;\n\n    if (guideProp === true) {\n      result = {\n        x: {},\n        y: {}\n      };\n    } else {\n      result = {};\n      if (guideProp.x) result.x = _extends({}, guideProp.x);\n      if (guideProp.y) result.y = _extends({}, guideProp.y);\n    } // set counts\n\n\n    if (result.x) {\n      // if no granularity and axis, align count with axis\n      if (!result.x.granularity && axis && axis.x) result.x.count = axis.x.count;\n      if (!result.x.count) result.x.count = granularities.x[result.x.granularity || 'coarse'];\n    }\n\n    if (result.y) {\n      // if no granularity and axis, align count with axis\n      if (!result.y.granularity && axis && axis.y) result.y.count = axis.y.count;\n      if (!result.y.count) result.y.count = granularities.y[result.y.granularity || 'coarse'];\n    }\n\n    return result;\n  }, [axis, granularities, guideProp]); // set the pad to half the thickness, based on the chart types\n\n  var pad = useMemo(function () {\n    if (padProp !== undefined) return padProp;\n    var result = {};\n    charts.forEach(function (_ref6, index) {\n      var type = _ref6.type;\n      var thickness = chartProps[index].thickness;\n      result.horizontal = halfPad[thickness];\n      if (type && type !== 'bar') result.vertical = halfPad[thickness];\n    });\n    return result;\n  }, [chartProps, charts, padProp]);\n  var dateFormats = useMemo(function () {\n    var result = {};\n    var full = axis && axis.x && axis.x.granularity === 'coarse';\n    series.forEach(function (_ref7) {\n      var property = _ref7.property,\n          render = _ref7.render;\n\n      if (!render && data.length > 1 && typeof data[0][property] === 'string') {\n        result[property] = createDateFormat(data[0][property], data[data.length - 1][property], full);\n      }\n    });\n    return result;\n  }, [axis, data, series]); // for ie11, align the spacer Box height to the x-axis height\n\n  useLayoutEffect(function () {\n    if (xRef.current && spacerRef.current) {\n      var rect = xRef.current.getBoundingClientRect();\n      spacerRef.current.style.height = rect.height + \"px\";\n    }\n  }, []);\n\n  var renderValue = function renderValue(serie, dataIndex, valueArg) {\n    var value;\n\n    if (valueArg !== undefined) {\n      if (serie && serie.render) return serie.render(valueArg);\n      value = valueArg;\n    } else {\n      var datum = data[dataIndex];\n      value = datum[serie.property];\n      if (serie && serie.render) return serie.render(value, datum, serie.property);\n    }\n\n    if (serie) {\n      var dateFormat = dateFormats[serie.property];\n      if (dateFormat) return dateFormat(new Date(value));\n      if (serie.prefix) value = \"\" + serie.prefix + value;\n      if (serie.suffix) value = \"\" + value + serie.suffix;\n    }\n\n    return value;\n  }; // TODO: revisit how x/y axis are hooked up to charts and series\n\n\n  var xAxisElement = axis && axis.x ? /*#__PURE__*/React.createElement(XAxis, {\n    ref: xRef,\n    axis: axis,\n    chartProps: chartProps,\n    data: data,\n    renderValue: renderValue,\n    serie: axis.x.property && getPropertySeries(axis.x.property)\n  }) : null;\n  var yAxisElement = axis && axis.y ? /*#__PURE__*/React.createElement(YAxis, {\n    axis: axis,\n    chartProps: chartProps,\n    pad: pad,\n    renderValue: renderValue,\n    serie: axis.y.property && getPropertySeries(axis.y.property)\n  }) : null;\n  var stackFill = useMemo(function () {\n    if (size === 'fill' || size && size.width === 'fill' && size.height === 'fill') return true;\n    if (size && size.width === 'fill') return 'horizontal';\n    if (size && size.height === 'fill') return 'vertical';\n    return undefined;\n  }, [size]);\n  var guidingChild = useMemo(function () {\n    var result = 0;\n    if (guide && guide.x) result += 1;\n    if (guide && guide.y) result += 1;\n    return result;\n  }, [guide]);\n  var stackElement = /*#__PURE__*/React.createElement(Stack, {\n    gridArea: \"charts\",\n    guidingChild: guidingChild,\n    fill: stackFill\n  }, guide && guide.x && /*#__PURE__*/React.createElement(XGuide, {\n    guide: guide,\n    pad: pad\n  }), guide && guide.y && /*#__PURE__*/React.createElement(YGuide, {\n    guide: guide,\n    pad: pad\n  }), charts.map(function (_ref8, i) {\n    var prop = _ref8.property,\n        type = _ref8.type,\n        x = _ref8.x,\n        y = _ref8.y,\n        chartRest = _objectWithoutPropertiesLoose(_ref8, [\"property\", \"type\", \"x\", \"y\"]);\n\n    if (type === 'bars') {\n      // reverse to ensure area Charts are stacked in the right order\n      return prop.map(function (cProp, j) {\n        return /*#__PURE__*/React.createElement(Chart // eslint-disable-next-line react/no-array-index-key\n        , _extends({\n          key: j,\n          values: chartValues[i][j],\n          overflow: true\n        }, seriesStyles[cProp], chartProps[i], chartRest, {\n          type: \"bar\",\n          size: size,\n          pad: pad\n        }));\n      }).reverse();\n    }\n\n    return /*#__PURE__*/React.createElement(Chart // eslint-disable-next-line react/no-array-index-key\n    , _extends({\n      key: i,\n      values: chartValues[i],\n      overflow: true\n    }, seriesStyles[prop], chartProps[i], chartRest, {\n      type: type,\n      size: size,\n      pad: pad\n    }));\n  }), detail && /*#__PURE__*/React.createElement(Detail, {\n    activeProperty: activeProperty,\n    axis: axis,\n    data: data,\n    series: series,\n    seriesStyles: seriesStyles,\n    renderValue: renderValue\n  }));\n  var legendElement = legend ? /*#__PURE__*/React.createElement(Legend, {\n    series: series,\n    seriesStyles: seriesStyles,\n    activeProperty: activeProperty,\n    setActiveProperty: setActiveProperty\n  }) : null; // IE11\n\n  if (!Grid.available) {\n    var _content = stackElement;\n\n    if (xAxisElement) {\n      _content = /*#__PURE__*/React.createElement(Box, null, _content, xAxisElement);\n    }\n\n    if (yAxisElement) {\n      _content = /*#__PURE__*/React.createElement(Box, {\n        direction: \"row\"\n      }, /*#__PURE__*/React.createElement(Box, null, yAxisElement, /*#__PURE__*/React.createElement(Box, {\n        ref: spacerRef,\n        flex: false\n      })), _content);\n    }\n\n    if (legendElement) {\n      _content = /*#__PURE__*/React.createElement(Box, null, _content, legendElement);\n    }\n\n    return _content;\n  }\n\n  var content = /*#__PURE__*/React.createElement(Grid, _extends({\n    ref: ref,\n    \"aria-label\": a11yTitle,\n    fill: stackFill,\n    columns: ['auto', stackFill === true || stackFill === 'horizontal' ? 'flex' : 'auto'],\n    rows: [stackFill === true || stackFill === 'vertical' ? 'flex' : 'auto', 'auto'],\n    areas: [{\n      name: 'yAxis',\n      start: [0, 0],\n      end: [0, 0]\n    }, {\n      name: 'xAxis',\n      start: [1, 1],\n      end: [1, 1]\n    }, {\n      name: 'charts',\n      start: [1, 0],\n      end: [1, 0]\n    }],\n    gap: gap\n  }, rest), xAxisElement, yAxisElement, stackElement);\n\n  if (legendElement) {\n    content = /*#__PURE__*/React.createElement(Box, {\n      align: \"start\"\n    }, content, legendElement);\n  }\n\n  return content;\n});\nDataChart.displayName = 'DataChart';\nvar DataChartDoc;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line global-require\n  DataChartDoc = require('./doc').doc(DataChart);\n}\n\nvar DataChartWrapper = DataChartDoc || DataChart;\nexport { DataChartWrapper as DataChart };"]},"metadata":{},"sourceType":"module"}