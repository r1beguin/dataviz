{"ast":null,"code":"var _jsxFileName = \"/Users/erwanbeguin/Documents/Developper/ynov/dataviz/src/features/Map/MapBox.js\";\nimport React from \"react\";\nimport { Map, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport \"./MapBox.css\";\nimport { Box, Button, RangeInput, Text } from \"grommet\";\nimport { exportComponentAsPNG } from \"react-component-export-image\";\nimport { Resizable } from \"re-resizable\";\n\nconst MapBox = () => {\n  const [data, setData] = React.useState([]);\n  const [tile, setTile] = React.useState(\"osm\");\n  const [composing, setComposing] = React.useState(50);\n  const componentRef = React.useRef();\n  React.useEffect(() => {\n    fetch(\"https://opendata.paris.fr/api/records/1.0/search/?dataset=referentiel-archeologique-de-paris&q=&facet=code_postal&facet=nature_operation&facet=responsable_operation&facet=date_operation&facet=prehistoire&facet=protohistoire&facet=antiquite&facet=moyen_age&facet=temps_modernes&facet=epoque_contemporaine\").then(response => response.json()).then(data => setData(data.records));\n  }, []);\n  return /*#__PURE__*/React.createElement(Box, {\n    height: \"medium\",\n    width: \"large\",\n    margin: \"small\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    margin: \"small\",\n    direction: \"row\",\n    gap: \"small\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setTile(\"osm\"),\n    label: \"OSM\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setTile(\"ign\"),\n    label: \"Vue a\\xE9rienne\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setTile(\"map\"),\n    label: \"Carte IGN\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setTile(\"test\"),\n    label: \"Mix A\\xE9ro/IGN\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Resizable, {\n    defaultSize: {\n      width: 600,\n      height: 300\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Map, {\n    center: [48.847, 2.343],\n    zoom: 12,\n    ref: componentRef,\n    zoomControl: false,\n    attributionControl: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, tile === \"osm\" ? /*#__PURE__*/React.createElement(TileLayer, {\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }) : tile === \"ign\" ? /*#__PURE__*/React.createElement(TileLayer, {\n    url: \"https://wxs.ign.fr/pratique/geoportail/wmts?SERVICE=WMTS&REQUEST=GetTile&VERSION=1.0.0&LAYER=ORTHOIMAGERY.ORTHOPHOTOS&TILEMATRIXSET=PM&TILEMATRIX={z}&TILECOL={x}&TILEROW={y}&STYLE=normal&FORMAT=image/jpeg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }) : tile === \"map\" ? /*#__PURE__*/React.createElement(TileLayer, {\n    url: \"https://wxs.ign.fr/pratique/geoportail/wmts?SERVICE=WMTS&REQUEST=GetTile&VERSION=1.0.0&LAYER=GEOGRAPHICALGRIDSYSTEMS.MAPS&TILEMATRIXSET=PM&TILEMATRIX={z}&TILECOL={x}&TILEROW={y}&STYLE=normal&FORMAT=image/jpeg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TileLayer, {\n    url: \"https://wxs.ign.fr/pratique/geoportail/wmts?SERVICE=WMTS&REQUEST=GetTile&VERSION=1.0.0&LAYER=ORTHOIMAGERY.ORTHOPHOTOS&TILEMATRIXSET=PM&TILEMATRIX={z}&TILECOL={x}&TILEROW={y}&STYLE=normal&FORMAT=image/jpeg\",\n    opacity: composing / 100,\n    zIndex: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TileLayer, {\n    url: \"https://wxs.ign.fr/pratique/geoportail/wmts?SERVICE=WMTS&REQUEST=GetTile&VERSION=1.0.0&LAYER=GEOGRAPHICALGRIDSYSTEMS.MAPS&TILEMATRIXSET=PM&TILEMATRIX={z}&TILECOL={x}&TILEROW={y}&STYLE=normal&FORMAT=image/jpeg\",\n    zIndex: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  })), data.map(item => /*#__PURE__*/React.createElement(Marker, {\n    position: item.fields.geo_point_2d,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Popup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    margin: \"small\",\n    overflow: \"scroll\",\n    height: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 19\n    }\n  }, item.fields.geo_point_2d), /*#__PURE__*/React.createElement(Text, {\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 19\n    }\n  }, item.fields.synthese))))))), tile === \"test\" && /*#__PURE__*/React.createElement(Box, {\n    margin: \"small\",\n    gap: \"small\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, \"Opacit\\xE9\"), /*#__PURE__*/React.createElement(RangeInput, {\n    value: composing,\n    onChange: e => setComposing(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    margin: \"small\",\n    width: \"small\",\n    gap: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => exportComponentAsPNG(componentRef),\n    label: \"Exporter l'image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default MapBox;","map":{"version":3,"sources":["/Users/erwanbeguin/Documents/Developper/ynov/dataviz/src/features/Map/MapBox.js"],"names":["React","Map","TileLayer","Marker","Popup","Box","Button","RangeInput","Text","exportComponentAsPNG","Resizable","MapBox","data","setData","useState","tile","setTile","composing","setComposing","componentRef","useRef","useEffect","fetch","then","response","json","records","width","height","map","item","fields","geo_point_2d","synthese","e","target","value"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Map, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport \"./MapBox.css\";\nimport { Box, Button, RangeInput, Text } from \"grommet\";\nimport { exportComponentAsPNG } from \"react-component-export-image\";\nimport { Resizable } from \"re-resizable\";\n\nconst MapBox = () => {\n  const [data, setData] = React.useState([]);\n  const [tile, setTile] = React.useState(\"osm\");\n  const [composing, setComposing] = React.useState(50);\n\n  const componentRef = React.useRef();\n\n  React.useEffect(() => {\n    fetch(\n      \"https://opendata.paris.fr/api/records/1.0/search/?dataset=referentiel-archeologique-de-paris&q=&facet=code_postal&facet=nature_operation&facet=responsable_operation&facet=date_operation&facet=prehistoire&facet=protohistoire&facet=antiquite&facet=moyen_age&facet=temps_modernes&facet=epoque_contemporaine\"\n    )\n      .then((response) => response.json())\n      .then((data) => setData(data.records));\n  }, []);\n\n  return (\n    <Box height=\"medium\" width=\"large\" margin=\"small\" align=\"center\">\n      <Box margin=\"small\" direction=\"row\" gap=\"small\" align=\"center\">\n        <Button onClick={() => setTile(\"osm\")} label=\"OSM\"></Button>\n        <Button onClick={() => setTile(\"ign\")} label=\"Vue aérienne\"></Button>\n        <Button onClick={() => setTile(\"map\")} label=\"Carte IGN\"></Button>\n        <Button onClick={() => setTile(\"test\")} label=\"Mix Aéro/IGN\"></Button>\n      </Box>\n      <Resizable defaultSize={{ width: 600, height: 300 }}>\n        <Map\n          center={[48.847, 2.343]}\n          zoom={12}\n          ref={componentRef}\n          zoomControl={false}\n          attributionControl={false}\n        >\n          {tile === \"osm\" ? (\n            <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\n          ) : tile === \"ign\" ? (\n            <TileLayer url=\"https://wxs.ign.fr/pratique/geoportail/wmts?SERVICE=WMTS&REQUEST=GetTile&VERSION=1.0.0&LAYER=ORTHOIMAGERY.ORTHOPHOTOS&TILEMATRIXSET=PM&TILEMATRIX={z}&TILECOL={x}&TILEROW={y}&STYLE=normal&FORMAT=image/jpeg\" />\n          ) : tile === \"map\" ? (\n            <TileLayer url=\"https://wxs.ign.fr/pratique/geoportail/wmts?SERVICE=WMTS&REQUEST=GetTile&VERSION=1.0.0&LAYER=GEOGRAPHICALGRIDSYSTEMS.MAPS&TILEMATRIXSET=PM&TILEMATRIX={z}&TILECOL={x}&TILEROW={y}&STYLE=normal&FORMAT=image/jpeg\" />\n          ) : (\n            <>\n              <TileLayer\n                url=\"https://wxs.ign.fr/pratique/geoportail/wmts?SERVICE=WMTS&REQUEST=GetTile&VERSION=1.0.0&LAYER=ORTHOIMAGERY.ORTHOPHOTOS&TILEMATRIXSET=PM&TILEMATRIX={z}&TILECOL={x}&TILEROW={y}&STYLE=normal&FORMAT=image/jpeg\"\n                opacity={composing / 100}\n                zIndex={2}\n              />\n              <TileLayer\n                url=\"https://wxs.ign.fr/pratique/geoportail/wmts?SERVICE=WMTS&REQUEST=GetTile&VERSION=1.0.0&LAYER=GEOGRAPHICALGRIDSYSTEMS.MAPS&TILEMATRIXSET=PM&TILEMATRIX={z}&TILECOL={x}&TILEROW={y}&STYLE=normal&FORMAT=image/jpeg\"\n                zIndex={1}\n              />\n            </>\n          )}\n\n          {data.map((item) => (\n            <Marker position={item.fields.geo_point_2d}>\n              <Popup>\n                <Box margin=\"small\" overflow=\"scroll\" height=\"small\">\n                  <Text size=\"small\">{item.fields.geo_point_2d}</Text>\n                  <Text size=\"small\">{item.fields.synthese}</Text>\n                </Box>\n              </Popup>\n            </Marker>\n          ))}\n        </Map>\n      </Resizable>\n      {tile === \"test\" && (\n        <Box margin=\"small\" gap=\"small\" align=\"center\">\n          <Text>Opacité</Text>\n          <RangeInput\n            value={composing}\n            onChange={(e) => setComposing(e.target.value)}\n          />\n        </Box>\n      )}\n      <Box margin=\"small\" width=\"small\" gap=\"small\">\n        <Button\n          onClick={() => exportComponentAsPNG(componentRef)}\n          label=\"Exporter l'image\"\n        ></Button>\n      </Box>\n    </Box>\n  );\n};\n\nexport default MapBox;\n"]},"metadata":{},"sourceType":"module"}