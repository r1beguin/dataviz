{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { Fragment } from 'react';\nimport { Cell } from './Cell';\nimport { ExpanderCell } from './ExpanderCell';\nimport { StyledDataTableBody, StyledDataTableRow } from './StyledDataTable';\nexport var GroupedBody = function GroupedBody(_ref) {\n  var background = _ref.background,\n      border = _ref.border,\n      columns = _ref.columns,\n      groupBy = _ref.groupBy,\n      groups = _ref.groups,\n      groupState = _ref.groupState,\n      pad = _ref.pad,\n      primaryProperty = _ref.primaryProperty,\n      onToggle = _ref.onToggle,\n      size = _ref.size,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"background\", \"border\", \"columns\", \"groupBy\", \"groups\", \"groupState\", \"pad\", \"primaryProperty\", \"onToggle\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(StyledDataTableBody, _extends({\n    size: size\n  }, rest), groups.map(function (group) {\n    var expanded = groupState[group.key].expanded;\n    var memberCount = group.data.length;\n    var content = memberCount > 1 ? /*#__PURE__*/React.createElement(StyledDataTableRow, {\n      key: group.key,\n      size: size\n    }, /*#__PURE__*/React.createElement(ExpanderCell, {\n      context: expanded ? 'groupHeader' : 'body',\n      expanded: expanded,\n      onToggle: onToggle(group.key)\n    }), columns.map(function (column) {\n      return /*#__PURE__*/React.createElement(Cell, {\n        key: column.property,\n        background: background,\n        border: border,\n        context: expanded ? 'groupHeader' : 'body',\n        column: column,\n        datum: group.datum,\n        pad: pad,\n        scope: column.property === groupBy ? 'row' : undefined\n      });\n    })) : null;\n\n    if (memberCount === 1 || expanded) {\n      content = /*#__PURE__*/React.createElement(Fragment, {\n        key: group.key\n      }, content, group.data.map(function (datum, index) {\n        var context = memberCount > 1 && index === memberCount - 1 ? 'groupEnd' : 'body';\n        return /*#__PURE__*/React.createElement(StyledDataTableRow, {\n          key: datum[primaryProperty],\n          size: size\n        }, /*#__PURE__*/React.createElement(ExpanderCell, {\n          context: context\n        }), columns.map(function (column) {\n          return /*#__PURE__*/React.createElement(Cell, {\n            key: column.property,\n            background: background,\n            border: border,\n            context: context,\n            column: column,\n            datum: datum,\n            pad: pad,\n            scope: column.primary ? 'row' : undefined\n          });\n        }));\n      }));\n    }\n\n    return content;\n  }));\n};","map":{"version":3,"sources":["/Users/erwanbeguin/Documents/Developper/ynov/dataviz/node_modules/grommet/es6/components/DataTable/GroupedBody.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","React","Fragment","Cell","ExpanderCell","StyledDataTableBody","StyledDataTableRow","GroupedBody","_ref","background","border","columns","groupBy","groups","groupState","pad","primaryProperty","onToggle","size","rest","createElement","map","group","expanded","memberCount","data","content","context","column","property","datum","scope","undefined","index","primary"],"mappings":"AAAA,SAASA,QAAT,GAAoB;AAAEA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,UAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,WAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,YAAIN,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,UAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,WAAOL,MAAP;AAAgB,GAA5P;;AAA8P,SAAOH,QAAQ,CAACY,KAAT,CAAe,IAAf,EAAqBP,SAArB,CAAP;AAAyC;;AAE7T,SAASQ,6BAAT,CAAuCN,MAAvC,EAA+CO,QAA/C,EAAyD;AAAE,MAAIP,MAAM,IAAI,IAAd,EAAoB,OAAO,EAAP;AAAW,MAAIJ,MAAM,GAAG,EAAb;AAAiB,MAAIY,UAAU,GAAGd,MAAM,CAACe,IAAP,CAAYT,MAAZ,CAAjB;AAAsC,MAAIC,GAAJ,EAASJ,CAAT;;AAAY,OAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGW,UAAU,CAACT,MAA3B,EAAmCF,CAAC,EAApC,EAAwC;AAAEI,IAAAA,GAAG,GAAGO,UAAU,CAACX,CAAD,CAAhB;AAAqB,QAAIU,QAAQ,CAACG,OAAT,CAAiBT,GAAjB,KAAyB,CAA7B,EAAgC;AAAUL,IAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;;AAAC,SAAOL,MAAP;AAAgB;;AAEnT,OAAOe,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,mBAAT,EAA8BC,kBAA9B,QAAwD,mBAAxD;AACA,OAAO,IAAIC,WAAW,GAAG,SAASA,WAAT,CAAqBC,IAArB,EAA2B;AAClD,MAAIC,UAAU,GAAGD,IAAI,CAACC,UAAtB;AAAA,MACIC,MAAM,GAAGF,IAAI,CAACE,MADlB;AAAA,MAEIC,OAAO,GAAGH,IAAI,CAACG,OAFnB;AAAA,MAGIC,OAAO,GAAGJ,IAAI,CAACI,OAHnB;AAAA,MAIIC,MAAM,GAAGL,IAAI,CAACK,MAJlB;AAAA,MAKIC,UAAU,GAAGN,IAAI,CAACM,UALtB;AAAA,MAMIC,GAAG,GAAGP,IAAI,CAACO,GANf;AAAA,MAOIC,eAAe,GAAGR,IAAI,CAACQ,eAP3B;AAAA,MAQIC,QAAQ,GAAGT,IAAI,CAACS,QARpB;AAAA,MASIC,IAAI,GAAGV,IAAI,CAACU,IAThB;AAAA,MAUIC,IAAI,GAAGvB,6BAA6B,CAACY,IAAD,EAAO,CAAC,YAAD,EAAe,QAAf,EAAyB,SAAzB,EAAoC,SAApC,EAA+C,QAA/C,EAAyD,YAAzD,EAAuE,KAAvE,EAA8E,iBAA9E,EAAiG,UAAjG,EAA6G,MAA7G,CAAP,CAVxC;;AAYA,SAAO,aAAaP,KAAK,CAACmB,aAAN,CAAoBf,mBAApB,EAAyCtB,QAAQ,CAAC;AACpEmC,IAAAA,IAAI,EAAEA;AAD8D,GAAD,EAElEC,IAFkE,CAAjD,EAEVN,MAAM,CAACQ,GAAP,CAAW,UAAUC,KAAV,EAAiB;AACpC,QAAIC,QAAQ,GAAGT,UAAU,CAACQ,KAAK,CAAC/B,GAAP,CAAV,CAAsBgC,QAArC;AACA,QAAIC,WAAW,GAAGF,KAAK,CAACG,IAAN,CAAWpC,MAA7B;AACA,QAAIqC,OAAO,GAAGF,WAAW,GAAG,CAAd,GAAkB,aAAavB,KAAK,CAACmB,aAAN,CAAoBd,kBAApB,EAAwC;AACnFf,MAAAA,GAAG,EAAE+B,KAAK,CAAC/B,GADwE;AAEnF2B,MAAAA,IAAI,EAAEA;AAF6E,KAAxC,EAG1C,aAAajB,KAAK,CAACmB,aAAN,CAAoBhB,YAApB,EAAkC;AAChDuB,MAAAA,OAAO,EAAEJ,QAAQ,GAAG,aAAH,GAAmB,MADY;AAEhDA,MAAAA,QAAQ,EAAEA,QAFsC;AAGhDN,MAAAA,QAAQ,EAAEA,QAAQ,CAACK,KAAK,CAAC/B,GAAP;AAH8B,KAAlC,CAH6B,EAOzCoB,OAAO,CAACU,GAAR,CAAY,UAAUO,MAAV,EAAkB;AAChC,aAAO,aAAa3B,KAAK,CAACmB,aAAN,CAAoBjB,IAApB,EAA0B;AAC5CZ,QAAAA,GAAG,EAAEqC,MAAM,CAACC,QADgC;AAE5CpB,QAAAA,UAAU,EAAEA,UAFgC;AAG5CC,QAAAA,MAAM,EAAEA,MAHoC;AAI5CiB,QAAAA,OAAO,EAAEJ,QAAQ,GAAG,aAAH,GAAmB,MAJQ;AAK5CK,QAAAA,MAAM,EAAEA,MALoC;AAM5CE,QAAAA,KAAK,EAAER,KAAK,CAACQ,KAN+B;AAO5Cf,QAAAA,GAAG,EAAEA,GAPuC;AAQ5CgB,QAAAA,KAAK,EAAEH,MAAM,CAACC,QAAP,KAAoBjB,OAApB,GAA8B,KAA9B,GAAsCoB;AARD,OAA1B,CAApB;AAUD,KAXG,CAPyC,CAA/B,GAkBR,IAlBN;;AAoBA,QAAIR,WAAW,KAAK,CAAhB,IAAqBD,QAAzB,EAAmC;AACjCG,MAAAA,OAAO,GAAG,aAAazB,KAAK,CAACmB,aAAN,CAAoBlB,QAApB,EAA8B;AACnDX,QAAAA,GAAG,EAAE+B,KAAK,CAAC/B;AADwC,OAA9B,EAEpBmC,OAFoB,EAEXJ,KAAK,CAACG,IAAN,CAAWJ,GAAX,CAAe,UAAUS,KAAV,EAAiBG,KAAjB,EAAwB;AACjD,YAAIN,OAAO,GAAGH,WAAW,GAAG,CAAd,IAAmBS,KAAK,KAAKT,WAAW,GAAG,CAA3C,GAA+C,UAA/C,GAA4D,MAA1E;AACA,eAAO,aAAavB,KAAK,CAACmB,aAAN,CAAoBd,kBAApB,EAAwC;AAC1Df,UAAAA,GAAG,EAAEuC,KAAK,CAACd,eAAD,CADgD;AAE1DE,UAAAA,IAAI,EAAEA;AAFoD,SAAxC,EAGjB,aAAajB,KAAK,CAACmB,aAAN,CAAoBhB,YAApB,EAAkC;AAChDuB,UAAAA,OAAO,EAAEA;AADuC,SAAlC,CAHI,EAKhBhB,OAAO,CAACU,GAAR,CAAY,UAAUO,MAAV,EAAkB;AAChC,iBAAO,aAAa3B,KAAK,CAACmB,aAAN,CAAoBjB,IAApB,EAA0B;AAC5CZ,YAAAA,GAAG,EAAEqC,MAAM,CAACC,QADgC;AAE5CpB,YAAAA,UAAU,EAAEA,UAFgC;AAG5CC,YAAAA,MAAM,EAAEA,MAHoC;AAI5CiB,YAAAA,OAAO,EAAEA,OAJmC;AAK5CC,YAAAA,MAAM,EAAEA,MALoC;AAM5CE,YAAAA,KAAK,EAAEA,KANqC;AAO5Cf,YAAAA,GAAG,EAAEA,GAPuC;AAQ5CgB,YAAAA,KAAK,EAAEH,MAAM,CAACM,OAAP,GAAiB,KAAjB,GAAyBF;AARY,WAA1B,CAApB;AAUD,SAXG,CALgB,CAApB;AAiBD,OAnBW,CAFW,CAAvB;AAsBD;;AAED,WAAON,OAAP;AACD,GAjDS,CAFU,CAApB;AAoDD,CAjEM","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { Fragment } from 'react';\nimport { Cell } from './Cell';\nimport { ExpanderCell } from './ExpanderCell';\nimport { StyledDataTableBody, StyledDataTableRow } from './StyledDataTable';\nexport var GroupedBody = function GroupedBody(_ref) {\n  var background = _ref.background,\n      border = _ref.border,\n      columns = _ref.columns,\n      groupBy = _ref.groupBy,\n      groups = _ref.groups,\n      groupState = _ref.groupState,\n      pad = _ref.pad,\n      primaryProperty = _ref.primaryProperty,\n      onToggle = _ref.onToggle,\n      size = _ref.size,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"background\", \"border\", \"columns\", \"groupBy\", \"groups\", \"groupState\", \"pad\", \"primaryProperty\", \"onToggle\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(StyledDataTableBody, _extends({\n    size: size\n  }, rest), groups.map(function (group) {\n    var expanded = groupState[group.key].expanded;\n    var memberCount = group.data.length;\n    var content = memberCount > 1 ? /*#__PURE__*/React.createElement(StyledDataTableRow, {\n      key: group.key,\n      size: size\n    }, /*#__PURE__*/React.createElement(ExpanderCell, {\n      context: expanded ? 'groupHeader' : 'body',\n      expanded: expanded,\n      onToggle: onToggle(group.key)\n    }), columns.map(function (column) {\n      return /*#__PURE__*/React.createElement(Cell, {\n        key: column.property,\n        background: background,\n        border: border,\n        context: expanded ? 'groupHeader' : 'body',\n        column: column,\n        datum: group.datum,\n        pad: pad,\n        scope: column.property === groupBy ? 'row' : undefined\n      });\n    })) : null;\n\n    if (memberCount === 1 || expanded) {\n      content = /*#__PURE__*/React.createElement(Fragment, {\n        key: group.key\n      }, content, group.data.map(function (datum, index) {\n        var context = memberCount > 1 && index === memberCount - 1 ? 'groupEnd' : 'body';\n        return /*#__PURE__*/React.createElement(StyledDataTableRow, {\n          key: datum[primaryProperty],\n          size: size\n        }, /*#__PURE__*/React.createElement(ExpanderCell, {\n          context: context\n        }), columns.map(function (column) {\n          return /*#__PURE__*/React.createElement(Cell, {\n            key: column.property,\n            background: background,\n            border: border,\n            context: context,\n            column: column,\n            datum: datum,\n            pad: pad,\n            scope: column.primary ? 'row' : undefined\n          });\n        }));\n      }));\n    }\n\n    return content;\n  }));\n};"]},"metadata":{},"sourceType":"module"}