{"ast":null,"code":"import React from \"react\";\nimport { asyncInputEvent } from \"./handler-wrapper\";\n\nconst SearchInputCore = ({\n  placeholder = \"PlaceHolder\",\n  type = \"text\",\n  initialValue = \"\",\n  className = \"\",\n  debounceTime = 400,\n  getInputValueSetter = () => {},\n  onClick = () => {},\n  onDoubleClick = () => {},\n  onMouseDown = () => {},\n  onMouseEnter = () => {},\n  onMouseLeave = () => {},\n  onChange = () => {},\n  onChangeAsync = () => {},\n  onFocus = () => {},\n  onBlur = () => {},\n  onKeyUp = () => {},\n  onKeyDown = () => {},\n  onKeyPress = () => {},\n  onSubmit = () => {},\n  tabIndex = 0\n}, ref) => {\n  const [value, setValue] = React.useState(initialValue);\n  const handlerDefaults = React.useCallback((e, cb) => {\n    // e.preventDefault();\n    // e.stopPropagation();\n    cb(e);\n  }, []);\n  const inputHandlers = React.useCallback(asyncInputEvent(e => {\n    e.preventDefault();\n    e.stopPropagation();\n    onChangeAsync(e);\n  }, e => {\n    e.preventDefault();\n    e.stopPropagation();\n    setValue(e.target.value);\n    onChange(e);\n  }, debounceTime), [setValue]);\n  React.useLayoutEffect(() => {\n    getInputValueSetter(setValue);\n  }, [setValue, getInputValueSetter]);\n  return React.createElement(\"input\", {\n    tabIndex: tabIndex,\n    ref: ref,\n    type: type,\n    name: \"SearchInput\",\n    value: value,\n    placeholder: placeholder,\n    className: `search-input${className ? ` ${className}` : \"\"}`,\n    onClick: e => handlerDefaults(e, onClick),\n    onDoubleClick: e => handlerDefaults(e, onDoubleClick),\n    onMouseEnter: e => handlerDefaults(e, onMouseEnter),\n    onMouseLeave: e => handlerDefaults(e, onMouseLeave),\n    onMouseDown: e => handlerDefaults(e, onMouseDown),\n    onChange: inputHandlers,\n    onFocus: e => handlerDefaults(e, onFocus),\n    onBlur: e => handlerDefaults(e, onBlur),\n    onKeyUp: e => handlerDefaults(e, onKeyUp),\n    onKeyDown: e => handlerDefaults(e, onKeyDown),\n    onKeyPress: e => handlerDefaults(e, onKeyPress),\n    onSubmit: e => handlerDefaults(e, onSubmit)\n  });\n};\n\nconst SearchInput = React.forwardRef(SearchInputCore);\n\nfunction SearchInputWrapper() {\n  const [state\n  /*setState*/\n  ] = React.useState(\"hebele\");\n  const inputValueSetter = React.useRef(() => {});\n  setTimeout(() => {\n    // setState('deneme');\n    inputValueSetter.current(\"deneme\");\n  }, 5000);\n  return React.createElement(SearchInput, {\n    initialValue: state,\n    getInputValueSetter: fn => inputValueSetter.current = fn,\n    onClick: e => {// console.log(\"[CLICK]\", \"input clicked\");\n    },\n    onDoubleClick: e => {// console.log(\"[DOUBLECLICK]\", \"input double clicked\");\n    }\n  });\n}\n\nexport { SearchInputWrapper, SearchInput };","map":{"version":3,"sources":["/Users/erwanbeguin/Documents/Developper/ynov/dataviz/node_modules/react-leaflet-search/lib/core/search-input.js"],"names":["React","asyncInputEvent","SearchInputCore","placeholder","type","initialValue","className","debounceTime","getInputValueSetter","onClick","onDoubleClick","onMouseDown","onMouseEnter","onMouseLeave","onChange","onChangeAsync","onFocus","onBlur","onKeyUp","onKeyDown","onKeyPress","onSubmit","tabIndex","ref","value","setValue","useState","handlerDefaults","useCallback","e","cb","inputHandlers","preventDefault","stopPropagation","target","useLayoutEffect","createElement","name","SearchInput","forwardRef","SearchInputWrapper","state","inputValueSetter","useRef","setTimeout","current","fn"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { asyncInputEvent } from \"./handler-wrapper\";\nconst SearchInputCore = ({ placeholder = \"PlaceHolder\", type = \"text\", initialValue = \"\", className = \"\", debounceTime = 400, getInputValueSetter = () => { }, onClick = () => { }, onDoubleClick = () => { }, onMouseDown = () => { }, onMouseEnter = () => { }, onMouseLeave = () => { }, onChange = () => { }, onChangeAsync = () => { }, onFocus = () => { }, onBlur = () => { }, onKeyUp = () => { }, onKeyDown = () => { }, onKeyPress = () => { }, onSubmit = () => { }, tabIndex = 0 }, ref) => {\n    const [value, setValue] = React.useState(initialValue);\n    const handlerDefaults = React.useCallback((e, cb) => {\n        // e.preventDefault();\n        // e.stopPropagation();\n        cb(e);\n    }, []);\n    const inputHandlers = React.useCallback(asyncInputEvent((e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        onChangeAsync(e);\n    }, (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        setValue(e.target.value);\n        onChange(e);\n    }, debounceTime), [setValue]);\n    React.useLayoutEffect(() => {\n        getInputValueSetter(setValue);\n    }, [setValue, getInputValueSetter]);\n    return (React.createElement(\"input\", { tabIndex: tabIndex, ref: ref, type: type, name: \"SearchInput\", value: value, placeholder: placeholder, className: `search-input${className ? ` ${className}` : \"\"}`, onClick: (e) => handlerDefaults(e, onClick), onDoubleClick: (e) => handlerDefaults(e, onDoubleClick), onMouseEnter: (e) => handlerDefaults(e, onMouseEnter), onMouseLeave: (e) => handlerDefaults(e, onMouseLeave), onMouseDown: (e) => handlerDefaults(e, onMouseDown), onChange: inputHandlers, onFocus: (e) => handlerDefaults(e, onFocus), onBlur: (e) => handlerDefaults(e, onBlur), onKeyUp: (e) => handlerDefaults(e, onKeyUp), onKeyDown: (e) => handlerDefaults(e, onKeyDown), onKeyPress: (e) => handlerDefaults(e, onKeyPress), onSubmit: (e) => handlerDefaults(e, onSubmit) }));\n};\nconst SearchInput = React.forwardRef(SearchInputCore);\nfunction SearchInputWrapper() {\n    const [state /*setState*/] = React.useState(\"hebele\");\n    const inputValueSetter = React.useRef(() => { });\n    setTimeout(() => {\n        // setState('deneme');\n        inputValueSetter.current(\"deneme\");\n    }, 5000);\n    return (React.createElement(SearchInput, { initialValue: state, getInputValueSetter: (fn) => (inputValueSetter.current = fn), onClick: (e) => {\n            // console.log(\"[CLICK]\", \"input clicked\");\n        }, onDoubleClick: (e) => {\n            // console.log(\"[DOUBLECLICK]\", \"input double clicked\");\n        } }));\n}\nexport { SearchInputWrapper, SearchInput };\n"]},"metadata":{},"sourceType":"module"}