{"ast":null,"code":"import { Control, DomUtil, DomEvent } from \"leaflet\";\nimport React from \"react\"; // import PropTypes from \"prop-types\";\n\nimport ReactDOM from \"react-dom\";\nimport { Popup, MapControl, Marker } from \"react-leaflet\";\nimport { SearchControl } from \"./search-control\";\nexport default class ReactLeafletSearch extends MapControl {\n  constructor(props, context) {\n    var _a;\n\n    super(props);\n\n    this.handler = ({\n      event,\n      payload\n    }) => {\n      var _a, _b;\n\n      if (event === \"add\" && payload) {\n        (_b = (_a = this.props).onChange) === null || _b === void 0 ? void 0 : _b.call(_a, payload);\n        this.latLngHandler(payload.latLng, payload.info, payload.raw);\n      } else {\n        this.setState({\n          search: false\n        });\n      }\n    };\n\n    this.div = DomUtil.create(\"div\", \"leaflet-search-wrap\");\n    DomEvent.disableClickPropagation(this.div);\n    DomEvent.disableScrollPropagation(this.div);\n    this.state = {\n      search: false,\n      info: false\n    };\n    this.SearchInfo = null; // searched lat,lng or response from provider\n\n    this.map = context.map || ((_a = props.leaflet) === null || _a === void 0 ? void 0 : _a.map);\n    this.markerRef = React.createRef();\n  }\n\n  createLeafletElement(props) {\n    const ReactLeafletSearchControl = Control.extend({\n      onAdd: map => this.div,\n      onRemove: map => {}\n    });\n    return new ReactLeafletSearchControl(props);\n  }\n\n  latLngHandler(latLng, info, raw) {\n    this.SearchInfo = {\n      info,\n      latLng,\n      raw\n    };\n    const popUpStructure = React.createElement(\"div\", null, React.createElement(\"p\", null, Array.isArray(info) ? info.toString() : info), React.createElement(\"div\", {\n      className: \"search-control-popup-seperator\"\n    }), React.createElement(\"div\", null, `latitude: ${latLng.lat}`), React.createElement(\"div\", null, `longitude: ${latLng.lng}`));\n    this.goToLatLng(latLng, popUpStructure);\n  }\n\n  goToLatLng(latLng, info) {\n    this.setState({\n      search: latLng,\n      info: info\n    }, () => {\n      this.flyTo();\n    });\n  }\n\n  flyTo() {\n    if (this.state.search) {\n      switch (this.props.mapStateModifier) {\n        case \"flyTo\":\n          this.map && this.map.flyTo(this.state.search, this.props.zoom, this.props.zoomPanOptions);\n          break;\n\n        case \"setView\":\n          this.map && this.map.setView(this.state.search, this.props.zoom, this.props.zoomPanOptions);\n          break;\n\n        default:\n          typeof this.props.mapStateModifier === \"function\" && this.props.mapStateModifier(this.state.search);\n      }\n    }\n  }\n\n  componentDidMount() {\n    super.componentDidMount && super.componentDidMount();\n    ReactDOM.render(React.createElement(SearchControl, Object.assign({\n      className: this.props.className,\n      provider: this.props.provider,\n      customProvider: this.props.customProvider,\n      providerOptions: this.props.providerOptions,\n      openSearchOnLoad: this.props.openSearchOnLoad,\n      closeResultsOnClick: this.props.closeResultsOnClick,\n      inputPlaceholder: this.props.inputPlaceholder,\n      search: this.props.search,\n      map: this.map,\n      handler: this.handler\n    }, this.props.tabIndex !== undefined ? {\n      tabIndex: this.props.tabIndex\n    } : {})), this.div);\n  }\n\n  componentDidUpdate() {\n    this.markerRef.current && this.markerRef.current.leafletElement.openPopup();\n  }\n\n  defaultPopUp() {\n    return React.createElement(Popup, null, React.createElement(\"span\", null, this.state.info));\n  }\n\n  render() {\n    return this.SearchInfo && this.state.search ? this.props.children ? this.props.children(this.SearchInfo) : this.props.showMarker ? React.createElement(Marker, Object.assign({\n      ref: this.markerRef,\n      key: `marker-search-${this.state.search.toString()}`,\n      position: this.state.search\n    }, this.props.markerIcon ? {\n      icon: this.props.markerIcon\n    } : {}), this.props.showPopup && (this.props.popUp ? this.props.popUp(this.SearchInfo) : this.defaultPopUp())) : null : null;\n  }\n\n} // static propTypes = {\n//     position: PropTypes.oneOf([\"topleft\", \"topright\", \"bottomleft\", \"bottomright\"]).isRequired,\n//     providerKey: PropTypes.string,\n//     inputPlaceholder: PropTypes.string,\n//     showMarker: PropTypes.bool,\n//     showPopup: PropTypes.bool,\n//     popUp: PropTypes.func,\n//     zoom: PropTypes.number,\n//     search: PropTypes.arrayOf(PropTypes.number),\n//     closeResultsOnClick: PropTypes.bool,\n//     openSearchOnLoad: PropTypes.bool,\n//     searchBounds: PropTypes.array,\n//     provider: PropTypes.string,\n//     providerOptions: PropTypes.object,\n//     zoomPanOptions: PropTypes.object,\n//     mapStateModifier: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n//     customProvider: PropTypes.oneOfType([PropTypes.object]),\n// };\n\nReactLeafletSearch.defaultProps = {\n  inputPlaceholder: \"Search Lat,Lng\",\n  showMarker: true,\n  showPopup: true,\n  zoom: 10,\n  closeResultsOnClick: false,\n  openSearchOnLoad: false,\n  search: undefined,\n  provider: \"OpenStreetMap\",\n  mapStateModifier: \"flyTo\",\n  zoomPanOptions: {\n    animate: true,\n    duration: 0.25,\n    easeLinearity: 0.25,\n    noMoveStart: false\n  }\n};","map":{"version":3,"sources":["/Users/erwanbeguin/Documents/Developper/ynov/dataviz/node_modules/react-leaflet-search/lib/ReactLeafletSearch.js"],"names":["Control","DomUtil","DomEvent","React","ReactDOM","Popup","MapControl","Marker","SearchControl","ReactLeafletSearch","constructor","props","context","_a","handler","event","payload","_b","onChange","call","latLngHandler","latLng","info","raw","setState","search","div","create","disableClickPropagation","disableScrollPropagation","state","SearchInfo","map","leaflet","markerRef","createRef","createLeafletElement","ReactLeafletSearchControl","extend","onAdd","onRemove","popUpStructure","createElement","Array","isArray","toString","className","lat","lng","goToLatLng","flyTo","mapStateModifier","zoom","zoomPanOptions","setView","componentDidMount","render","Object","assign","provider","customProvider","providerOptions","openSearchOnLoad","closeResultsOnClick","inputPlaceholder","tabIndex","undefined","componentDidUpdate","current","leafletElement","openPopup","defaultPopUp","children","showMarker","ref","key","position","markerIcon","icon","showPopup","popUp","defaultProps","animate","duration","easeLinearity","noMoveStart"],"mappings":"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","sourcesContent":["import { Control, DomUtil, DomEvent } from \"leaflet\";\nimport React from \"react\";\n// import PropTypes from \"prop-types\";\nimport ReactDOM from \"react-dom\";\nimport { Popup, MapControl, Marker } from \"react-leaflet\";\nimport { SearchControl } from \"./search-control\";\nexport default class ReactLeafletSearch extends MapControl {\n    constructor(props, context) {\n        var _a;\n        super(props);\n        this.handler = ({ event, payload }) => {\n            var _a, _b;\n            if (event === \"add\" && payload) {\n                (_b = (_a = this.props).onChange) === null || _b === void 0 ? void 0 : _b.call(_a, payload);\n                this.latLngHandler(payload.latLng, payload.info, payload.raw);\n            }\n            else {\n                this.setState({ search: false });\n            }\n        };\n        this.div = DomUtil.create(\"div\", \"leaflet-search-wrap\");\n        DomEvent.disableClickPropagation(this.div);\n        DomEvent.disableScrollPropagation(this.div);\n        this.state = {\n            search: false,\n            info: false\n        };\n        this.SearchInfo = null; // searched lat,lng or response from provider\n        this.map = context.map || ((_a = props.leaflet) === null || _a === void 0 ? void 0 : _a.map);\n        this.markerRef = React.createRef();\n    }\n    createLeafletElement(props) {\n        const ReactLeafletSearchControl = Control.extend({\n            onAdd: (map) => this.div,\n            onRemove: (map) => { }\n        });\n        return new ReactLeafletSearchControl(props);\n    }\n    latLngHandler(latLng, info, raw) {\n        this.SearchInfo = { info, latLng, raw };\n        const popUpStructure = (React.createElement(\"div\", null,\n            React.createElement(\"p\", null, Array.isArray(info) ? info.toString() : info),\n            React.createElement(\"div\", { className: \"search-control-popup-seperator\" }),\n            React.createElement(\"div\", null, `latitude: ${latLng.lat}`),\n            React.createElement(\"div\", null, `longitude: ${latLng.lng}`)));\n        this.goToLatLng(latLng, popUpStructure);\n    }\n    goToLatLng(latLng, info) {\n        this.setState({ search: latLng, info: info }, () => {\n            this.flyTo();\n        });\n    }\n    flyTo() {\n        if (this.state.search) {\n            switch (this.props.mapStateModifier) {\n                case \"flyTo\":\n                    this.map && this.map.flyTo(this.state.search, this.props.zoom, this.props.zoomPanOptions);\n                    break;\n                case \"setView\":\n                    this.map && this.map.setView(this.state.search, this.props.zoom, this.props.zoomPanOptions);\n                    break;\n                default:\n                    typeof this.props.mapStateModifier === \"function\" && this.props.mapStateModifier(this.state.search);\n            }\n        }\n    }\n    componentDidMount() {\n        super.componentDidMount && super.componentDidMount();\n        ReactDOM.render(React.createElement(SearchControl, Object.assign({ className: this.props.className, provider: this.props.provider, customProvider: this.props.customProvider, providerOptions: this.props.providerOptions, openSearchOnLoad: this.props.openSearchOnLoad, closeResultsOnClick: this.props.closeResultsOnClick, inputPlaceholder: this.props.inputPlaceholder, search: this.props.search, map: this.map, handler: this.handler }, (this.props.tabIndex !== undefined ? { tabIndex: this.props.tabIndex } : {}))), this.div);\n    }\n    componentDidUpdate() {\n        this.markerRef.current && this.markerRef.current.leafletElement.openPopup();\n    }\n    defaultPopUp() {\n        return (React.createElement(Popup, null,\n            React.createElement(\"span\", null, this.state.info)));\n    }\n    render() {\n        return this.SearchInfo && this.state.search ? (this.props.children ? (this.props.children(this.SearchInfo)) : this.props.showMarker ? (React.createElement(Marker, Object.assign({ ref: this.markerRef, key: `marker-search-${this.state.search.toString()}`, position: this.state.search }, (this.props.markerIcon ? { icon: this.props.markerIcon } : {})), this.props.showPopup && (this.props.popUp ? this.props.popUp(this.SearchInfo) : this.defaultPopUp()))) : null) : null;\n    }\n}\n// static propTypes = {\n//     position: PropTypes.oneOf([\"topleft\", \"topright\", \"bottomleft\", \"bottomright\"]).isRequired,\n//     providerKey: PropTypes.string,\n//     inputPlaceholder: PropTypes.string,\n//     showMarker: PropTypes.bool,\n//     showPopup: PropTypes.bool,\n//     popUp: PropTypes.func,\n//     zoom: PropTypes.number,\n//     search: PropTypes.arrayOf(PropTypes.number),\n//     closeResultsOnClick: PropTypes.bool,\n//     openSearchOnLoad: PropTypes.bool,\n//     searchBounds: PropTypes.array,\n//     provider: PropTypes.string,\n//     providerOptions: PropTypes.object,\n//     zoomPanOptions: PropTypes.object,\n//     mapStateModifier: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n//     customProvider: PropTypes.oneOfType([PropTypes.object]),\n// };\nReactLeafletSearch.defaultProps = {\n    inputPlaceholder: \"Search Lat,Lng\",\n    showMarker: true,\n    showPopup: true,\n    zoom: 10,\n    closeResultsOnClick: false,\n    openSearchOnLoad: false,\n    search: undefined,\n    provider: \"OpenStreetMap\",\n    mapStateModifier: \"flyTo\",\n    zoomPanOptions: {\n        animate: true,\n        duration: 0.25,\n        easeLinearity: 0.25,\n        noMoveStart: false\n    }\n};\n"]},"metadata":{},"sourceType":"module"}