{"ast":null,"code":"var _jsxFileName = \"/Users/erwanbeguin/Documents/Developper/ynov/dataviz/src/features/Map/MapBox.js\";\nimport React from \"react\";\nimport { Map, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport \"./MapBox.css\";\nimport { Box, Button, RangeInput, Text, RadioButtonGroup, ResponsiveContext } from \"grommet\";\nimport { exportComponentAsPNG } from \"react-component-export-image\";\nimport ReactLeafletSearch from \"react-leaflet-search\";\n\nconst MapBox = () => {\n  const [data, setData] = React.useState([]);\n  const [tile, setTile] = React.useState(3);\n  const [composing, setComposing] = React.useState(50);\n  const [maps] = React.useState([{\n    name: \"osm\",\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n  }, {\n    name: \"ign\",\n    url: \"https://wxs.ign.fr/pratique/geoportail/wmts?SERVICE=WMTS&REQUEST=GetTile&VERSION=1.0.0&LAYER=ORTHOIMAGERY.ORTHOPHOTOS&TILEMATRIXSET=PM&TILEMATRIX={z}&TILECOL={x}&TILEROW={y}&STYLE=normal&FORMAT=image/jpeg\"\n  }, {\n    name: \"map\",\n    url: \"https://wxs.ign.fr/pratique/geoportail/wmts?SERVICE=WMTS&REQUEST=GetTile&VERSION=1.0.0&LAYER=GEOGRAPHICALGRIDSYSTEMS.MAPS&TILEMATRIXSET=PM&TILEMATRIX={z}&TILECOL={x}&TILEROW={y}&STYLE=normal&FORMAT=image/jpeg\"\n  }]);\n  const [pair, setPair] = React.useState([2, 1]);\n  const size = React.useContext(ResponsiveContext);\n  const componentRef = React.useRef();\n  React.useEffect(() => {\n    fetch(\"https://opendata.paris.fr/api/records/1.0/search/?dataset=referentiel-archeologique-de-paris&q=&facet=code_postal&facet=nature_operation&facet=responsable_operation&facet=date_operation&facet=prehistoire&facet=protohistoire&facet=antiquite&facet=moyen_age&facet=temps_modernes&facet=epoque_contemporaine\").then(response => response.json()).then(data => setData(data.records));\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, size === \"small\" && /*#__PURE__*/React.createElement(Box, {\n    direction: \"row\",\n    margin: \"small\",\n    gap: \"small\",\n    align: \"center\",\n    style: {\n      width: \"20%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setTile(0),\n    label: \"OSM\",\n    color: tile === 0 && \"red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setTile(1),\n    label: \"Vue a\\xE9rienne\",\n    color: tile === 1 && \"red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setTile(2),\n    label: \"Carte IGN\",\n    color: tile === 2 && \"red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setTile(3),\n    label: \"Mix\",\n    color: tile === 3 && \"red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, tile === 3 && /*#__PURE__*/React.createElement(Box, {\n    margin: \"small\",\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    margin: \"small\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 19\n    }\n  }, \"Carte 1 : \"), /*#__PURE__*/React.createElement(RadioButtonGroup, {\n    name: \"radio\",\n    options: [{\n      label: \"OSM\",\n      value: 0\n    }, {\n      label: \"Aéro\",\n      value: 1\n    }, {\n      label: \"IGN\",\n      value: 2\n    }],\n    value: pair[0],\n    onChange: event => {\n      const newArr = [...pair];\n      newArr[0] = parseInt(event.target.value);\n      setPair(newArr);\n      console.log(pair);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    margin: \"small\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 19\n    }\n  }, \"Carte 2 : \"), /*#__PURE__*/React.createElement(RadioButtonGroup, {\n    name: \"radio\",\n    options: [{\n      label: \"OSM\",\n      value: 0\n    }, {\n      label: \"Aéro\",\n      value: 1\n    }, {\n      label: \"IGN\",\n      value: 2\n    }],\n    value: pair[1],\n    onChange: event => {\n      const newArr = [...pair];\n      newArr[1] = parseInt(event.target.value);\n      setPair(newArr);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 19\n    }\n  }))), tile === 3 && /*#__PURE__*/React.createElement(Box, {\n    margin: \"small\",\n    gap: \"small\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }, \"Opacit\\xE9\"), /*#__PURE__*/React.createElement(RangeInput, {\n    value: composing,\n    onChange: e => setComposing(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    margin: \"small\",\n    width: \"small\",\n    gap: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => exportComponentAsPNG(componentRef),\n    label: \"Exporter l'image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(Box, {\n    align: \"center\",\n    direction: \"row\",\n    fill: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, size !== \"small\" && /*#__PURE__*/React.createElement(Box, {\n    margin: \"small\",\n    gap: \"small\",\n    align: \"center\",\n    style: {\n      width: \"20%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setTile(0),\n    label: \"OSM\",\n    color: tile === 0 && \"red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setTile(1),\n    label: \"Vue a\\xE9rienne\",\n    color: tile === 1 && \"red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setTile(2),\n    label: \"Carte IGN\",\n    color: tile === 2 && \"red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setTile(3),\n    label: \"Mix\",\n    color: tile === 3 && \"red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }), tile === 3 && /*#__PURE__*/React.createElement(Box, {\n    margin: \"small\",\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    margin: \"small\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 19\n    }\n  }, \"Carte 1 : \"), /*#__PURE__*/React.createElement(RadioButtonGroup, {\n    name: \"radio\",\n    options: [{\n      label: \"OSM\",\n      value: 0\n    }, {\n      label: \"Aéro\",\n      value: 1\n    }, {\n      label: \"IGN\",\n      value: 2\n    }],\n    value: pair[0],\n    onChange: event => {\n      const newArr = [...pair];\n      newArr[0] = parseInt(event.target.value);\n      setPair(newArr);\n      console.log(pair);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    margin: \"small\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 19\n    }\n  }, \"Carte 2 : \"), /*#__PURE__*/React.createElement(RadioButtonGroup, {\n    name: \"radio\",\n    options: [{\n      label: \"OSM\",\n      value: 0\n    }, {\n      label: \"Aéro\",\n      value: 1\n    }, {\n      label: \"IGN\",\n      value: 2\n    }],\n    value: pair[1],\n    onChange: event => {\n      const newArr = [...pair];\n      newArr[1] = parseInt(event.target.value);\n      setPair(newArr);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 19\n    }\n  }))), tile === 3 && /*#__PURE__*/React.createElement(Box, {\n    margin: \"small\",\n    gap: \"small\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 17\n    }\n  }, \"Opacit\\xE9\"), /*#__PURE__*/React.createElement(RangeInput, {\n    value: composing,\n    onChange: e => setComposing(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    margin: \"small\",\n    width: \"small\",\n    gap: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => exportComponentAsPNG(componentRef),\n    label: \"Exporter l'image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Box, {\n    fill: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Map, {\n    center: [48.847, 2.343],\n    zoom: 12,\n    ref: componentRef,\n    zoomControl: false,\n    attributionControl: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 11\n    }\n  }, tile === 3 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TileLayer, {\n    url: maps[pair[0]].url,\n    opacity: composing / 100,\n    zIndex: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TileLayer, {\n    url: maps[pair[1]].url,\n    zIndex: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 17\n    }\n  })) : /*#__PURE__*/React.createElement(TileLayer, {\n    url: maps[tile].url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(ReactLeafletSearch, {\n    position: \"topleft\",\n    inputPlaceholder: \"Custom placeholder\" // search={this.state.search}\n    ,\n    showMarker: false,\n    zoom: 12,\n    closeResultsOnClick: true,\n    openSearchOnLoad: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }\n  }), data.map(item => /*#__PURE__*/React.createElement(Marker, {\n    position: item.fields.geo_point_2d,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Popup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    margin: \"small\",\n    overflow: \"scroll\",\n    height: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 21\n    }\n  }, item.fields.synthese)))))))));\n};\n\nexport default MapBox;","map":{"version":3,"sources":["/Users/erwanbeguin/Documents/Developper/ynov/dataviz/src/features/Map/MapBox.js"],"names":["React","Map","TileLayer","Marker","Popup","Box","Button","RangeInput","Text","RadioButtonGroup","ResponsiveContext","exportComponentAsPNG","ReactLeafletSearch","MapBox","data","setData","useState","tile","setTile","composing","setComposing","maps","name","url","pair","setPair","size","useContext","componentRef","useRef","useEffect","fetch","then","response","json","records","width","label","value","event","newArr","parseInt","target","console","log","e","map","item","fields","geo_point_2d","synthese"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Map, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport \"./MapBox.css\";\nimport {\n  Box,\n  Button,\n  RangeInput,\n  Text,\n  RadioButtonGroup,\n  ResponsiveContext,\n} from \"grommet\";\nimport { exportComponentAsPNG } from \"react-component-export-image\";\nimport ReactLeafletSearch from \"react-leaflet-search\";\n\nconst MapBox = () => {\n  const [data, setData] = React.useState([]);\n  const [tile, setTile] = React.useState(3);\n  const [composing, setComposing] = React.useState(50);\n  const [maps] = React.useState([\n    {\n      name: \"osm\",\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    },\n    {\n      name: \"ign\",\n      url:\n        \"https://wxs.ign.fr/pratique/geoportail/wmts?SERVICE=WMTS&REQUEST=GetTile&VERSION=1.0.0&LAYER=ORTHOIMAGERY.ORTHOPHOTOS&TILEMATRIXSET=PM&TILEMATRIX={z}&TILECOL={x}&TILEROW={y}&STYLE=normal&FORMAT=image/jpeg\",\n    },\n    {\n      name: \"map\",\n      url:\n        \"https://wxs.ign.fr/pratique/geoportail/wmts?SERVICE=WMTS&REQUEST=GetTile&VERSION=1.0.0&LAYER=GEOGRAPHICALGRIDSYSTEMS.MAPS&TILEMATRIXSET=PM&TILEMATRIX={z}&TILECOL={x}&TILEROW={y}&STYLE=normal&FORMAT=image/jpeg\",\n    },\n  ]);\n  const [pair, setPair] = React.useState([2, 1]);\n\n  const size = React.useContext(ResponsiveContext);\n  const componentRef = React.useRef();\n\n  React.useEffect(() => {\n    fetch(\n      \"https://opendata.paris.fr/api/records/1.0/search/?dataset=referentiel-archeologique-de-paris&q=&facet=code_postal&facet=nature_operation&facet=responsable_operation&facet=date_operation&facet=prehistoire&facet=protohistoire&facet=antiquite&facet=moyen_age&facet=temps_modernes&facet=epoque_contemporaine\"\n    )\n      .then((response) => response.json())\n      .then((data) => setData(data.records));\n  }, []);\n\n  return (\n    <>\n      {size === \"small\" && (\n        <Box\n          direction=\"row\"\n          margin=\"small\"\n          gap=\"small\"\n          align=\"center\"\n          style={{ width: \"20%\" }}\n        >\n          <Box>\n            <Button\n              onClick={() => setTile(0)}\n              label=\"OSM\"\n              color={tile === 0 && \"red\"}\n            ></Button>\n            <Button\n              onClick={() => setTile(1)}\n              label=\"Vue aérienne\"\n              color={tile === 1 && \"red\"}\n            ></Button>\n            <Button\n              onClick={() => setTile(2)}\n              label=\"Carte IGN\"\n              color={tile === 2 && \"red\"}\n            ></Button>\n            <Button\n              onClick={() => setTile(3)}\n              label=\"Mix\"\n              color={tile === 3 && \"red\"}\n            ></Button>\n          </Box>\n          <Box>\n            {tile === 3 && (\n              <Box margin=\"small\" direction=\"row\">\n                <Box margin=\"small\" align=\"center\">\n                  <Text>Carte 1 : </Text>\n                  <RadioButtonGroup\n                    name=\"radio\"\n                    options={[\n                      { label: \"OSM\", value: 0 },\n                      { label: \"Aéro\", value: 1 },\n                      { label: \"IGN\", value: 2 },\n                    ]}\n                    value={pair[0]}\n                    onChange={(event) => {\n                      const newArr = [...pair];\n                      newArr[0] = parseInt(event.target.value);\n                      setPair(newArr);\n                      console.log(pair);\n                    }}\n                  />\n                </Box>\n                <Box margin=\"small\" align=\"center\">\n                  <Text>Carte 2 : </Text>\n                  <RadioButtonGroup\n                    name=\"radio\"\n                    options={[\n                      { label: \"OSM\", value: 0 },\n                      { label: \"Aéro\", value: 1 },\n                      { label: \"IGN\", value: 2 },\n                    ]}\n                    value={pair[1]}\n                    onChange={(event) => {\n                      const newArr = [...pair];\n                      newArr[1] = parseInt(event.target.value);\n                      setPair(newArr);\n                    }}\n                  />\n                </Box>\n              </Box>\n            )}\n            {tile === 3 && (\n              <Box margin=\"small\" gap=\"small\" align=\"center\">\n                <Text>Opacité</Text>\n                <RangeInput\n                  value={composing}\n                  onChange={(e) => setComposing(e.target.value)}\n                />\n              </Box>\n            )}\n            <Box margin=\"small\" width=\"small\" gap=\"small\">\n              <Button\n                onClick={() => exportComponentAsPNG(componentRef)}\n                label=\"Exporter l'image\"\n              ></Button>\n            </Box>\n          </Box>\n        </Box>\n      )}\n      <Box align=\"center\" direction=\"row\" fill>\n        {size !== \"small\" && (\n          <Box\n            margin=\"small\"\n            gap=\"small\"\n            align=\"center\"\n            style={{ width: \"20%\" }}\n          >\n            <Button\n              onClick={() => setTile(0)}\n              label=\"OSM\"\n              color={tile === 0 && \"red\"}\n            ></Button>\n            <Button\n              onClick={() => setTile(1)}\n              label=\"Vue aérienne\"\n              color={tile === 1 && \"red\"}\n            ></Button>\n            <Button\n              onClick={() => setTile(2)}\n              label=\"Carte IGN\"\n              color={tile === 2 && \"red\"}\n            ></Button>\n            <Button\n              onClick={() => setTile(3)}\n              label=\"Mix\"\n              color={tile === 3 && \"red\"}\n            ></Button>\n            {tile === 3 && (\n              <Box margin=\"small\" direction=\"row\">\n                <Box margin=\"small\" align=\"center\">\n                  <Text>Carte 1 : </Text>\n                  <RadioButtonGroup\n                    name=\"radio\"\n                    options={[\n                      { label: \"OSM\", value: 0 },\n                      { label: \"Aéro\", value: 1 },\n                      { label: \"IGN\", value: 2 },\n                    ]}\n                    value={pair[0]}\n                    onChange={(event) => {\n                      const newArr = [...pair];\n                      newArr[0] = parseInt(event.target.value);\n                      setPair(newArr);\n                      console.log(pair);\n                    }}\n                  />\n                </Box>\n                <Box margin=\"small\" align=\"center\">\n                  <Text>Carte 2 : </Text>\n                  <RadioButtonGroup\n                    name=\"radio\"\n                    options={[\n                      { label: \"OSM\", value: 0 },\n                      { label: \"Aéro\", value: 1 },\n                      { label: \"IGN\", value: 2 },\n                    ]}\n                    value={pair[1]}\n                    onChange={(event) => {\n                      const newArr = [...pair];\n                      newArr[1] = parseInt(event.target.value);\n                      setPair(newArr);\n                    }}\n                  />\n                </Box>\n              </Box>\n            )}\n            {tile === 3 && (\n              <Box margin=\"small\" gap=\"small\" align=\"center\">\n                <Text>Opacité</Text>\n                <RangeInput\n                  value={composing}\n                  onChange={(e) => setComposing(e.target.value)}\n                />\n              </Box>\n            )}\n            <Box margin=\"small\" width=\"small\" gap=\"small\">\n              <Button\n                onClick={() => exportComponentAsPNG(componentRef)}\n                label=\"Exporter l'image\"\n              ></Button>\n            </Box>\n          </Box>\n        )}\n\n        <Box fill>\n          <Map\n            center={[48.847, 2.343]}\n            zoom={12}\n            ref={componentRef}\n            zoomControl={false}\n            attributionControl={false}\n          >\n            {tile === 3 ? (\n              <>\n                <TileLayer\n                  url={maps[pair[0]].url}\n                  opacity={composing / 100}\n                  zIndex={2}\n                />\n                <TileLayer url={maps[pair[1]].url} zIndex={1} />\n              </>\n            ) : (\n              <TileLayer url={maps[tile].url} />\n            )}\n            <ReactLeafletSearch\n              position=\"topleft\"\n              inputPlaceholder=\"Custom placeholder\"\n              // search={this.state.search}\n              showMarker={false}\n              zoom={12}\n              closeResultsOnClick={true}\n              openSearchOnLoad={false}\n            ></ReactLeafletSearch>\n\n            {data.map((item) => (\n              <Marker position={item.fields.geo_point_2d}>\n                <Popup>\n                  <Box margin=\"small\" overflow=\"scroll\" height=\"small\">\n                    <Text size=\"small\">{item.fields.synthese}</Text>\n                  </Box>\n                </Popup>\n              </Marker>\n            ))}\n          </Map>\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nexport default MapBox;\n"]},"metadata":{},"sourceType":"module"}