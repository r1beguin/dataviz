{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { Children, cloneElement, forwardRef, useContext, useState } from 'react';\nimport styled, { ThemeContext } from 'styled-components';\nimport { defaultProps } from '../../default-props';\nimport { focusStyle, parseMetricToNum } from '../../utils';\nimport { Box } from '../Box';\nimport { CheckBox } from '../CheckBox';\nimport { CheckBoxGroup } from '../CheckBoxGroup';\nimport { RadioButtonGroup } from '../RadioButtonGroup';\nimport { Text } from '../Text';\nimport { TextInput } from '../TextInput';\nimport { FormContext } from '../Form/FormContext';\nvar grommetInputNames = ['TextInput', 'Select', 'MaskedInput', 'TextArea', 'DateInput'];\nvar grommetInputPadNames = ['CheckBox', 'CheckBoxGroup', 'RadioButtonGroup', 'RangeInput'];\n\nvar isGrommetInput = function isGrommetInput(comp) {\n  return comp && (grommetInputNames.indexOf(comp.displayName) !== -1 || grommetInputPadNames.indexOf(comp.displayName) !== -1);\n};\n\nvar FormFieldBox = styled(Box).withConfig({\n  displayName: \"FormField__FormFieldBox\",\n  componentId: \"m9hood-0\"\n})([\"\", \" \", \"\"], function (props) {\n  return props.focus && focusStyle({\n    justBorder: true\n  });\n}, function (props) {\n  return props.theme.formField && props.theme.formField.extend;\n});\nvar FormFieldContentBox = styled(Box).withConfig({\n  displayName: \"FormField__FormFieldContentBox\",\n  componentId: \"m9hood-1\"\n})([\"\", \"\"], function (props) {\n  return props.focus && focusStyle({\n    justBorder: true\n  });\n});\n\nvar Message = function Message(_ref) {\n  var message = _ref.message,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"message\"]);\n\n  if (message) {\n    if (typeof message === 'string') return /*#__PURE__*/React.createElement(Text, rest, message);\n    return /*#__PURE__*/React.createElement(Box, rest, message);\n  }\n\n  return null;\n};\n\nvar Input = function Input(_ref2) {\n  var component = _ref2.component,\n      disabled = _ref2.disabled,\n      invalid = _ref2.invalid,\n      name = _ref2.name,\n      _onChange = _ref2.onChange,\n      rest = _objectWithoutPropertiesLoose(_ref2, [\"component\", \"disabled\", \"invalid\", \"name\", \"onChange\"]);\n\n  var formContext = useContext(FormContext);\n\n  var _formContext$useFormI = formContext.useFormInput(name, rest.value),\n      value = _formContext$useFormI[0],\n      setValue = _formContext$useFormI[1];\n\n  var InputComponent = component || TextInput; // Grommet input components already check for FormContext\n  // and, using their `name`, end up calling the useFormInput.setValue()\n  // already. For custom components, we expect they will call\n  // this onChange() and we'll call setValue() here, primarily\n  // for backwards compatibility.\n\n  var extraProps = isGrommetInput(InputComponent) ? {\n    focusIndicator: false,\n    onChange: _onChange,\n    plain: true\n  } : {\n    value: value,\n    onChange: function onChange(event) {\n      setValue(event.value !== undefined ? event.value : event.target.value);\n      if (_onChange) _onChange(event);\n    }\n  };\n  return /*#__PURE__*/React.createElement(InputComponent, _extends({\n    name: name,\n    disabled: disabled,\n    \"aria-invalid\": invalid || undefined\n  }, rest, extraProps));\n};\n\nvar FormField = /*#__PURE__*/forwardRef(function (_ref3, ref) {\n  var children = _ref3.children,\n      className = _ref3.className,\n      component = _ref3.component,\n      contentProps = _ref3.contentProps,\n      disabled = _ref3.disabled,\n      errorProp = _ref3.error,\n      help = _ref3.help,\n      htmlFor = _ref3.htmlFor,\n      infoProp = _ref3.info,\n      label = _ref3.label,\n      margin = _ref3.margin,\n      name = _ref3.name,\n      _onBlur = _ref3.onBlur,\n      _onFocus = _ref3.onFocus,\n      pad = _ref3.pad,\n      required = _ref3.required,\n      style = _ref3.style,\n      validate = _ref3.validate,\n      rest = _objectWithoutPropertiesLoose(_ref3, [\"children\", \"className\", \"component\", \"contentProps\", \"disabled\", \"error\", \"help\", \"htmlFor\", \"info\", \"label\", \"margin\", \"name\", \"onBlur\", \"onFocus\", \"pad\", \"required\", \"style\", \"validate\"]);\n\n  var theme = useContext(ThemeContext) || defaultProps.theme;\n  var formContext = useContext(FormContext);\n\n  var _formContext$useFormF = formContext.useFormField({\n    error: errorProp,\n    info: infoProp,\n    name: name,\n    required: required,\n    validate: validate\n  }),\n      error = _formContext$useFormF.error,\n      info = _formContext$useFormF.info,\n      inForm = _formContext$useFormF.inForm,\n      contextOnBlur = _formContext$useFormF.onBlur;\n\n  var _useState = useState(),\n      focus = _useState[0],\n      setFocus = _useState[1];\n\n  var formFieldTheme = theme.formField;\n  var themeBorder = formFieldTheme.border; // This is here for backwards compatibility. In case the child is a grommet\n  // input component, set plain and focusIndicator props, if they aren't\n  // already set.\n\n  var wantContentPad = component && (component === CheckBox || component === CheckBoxGroup || component === RadioButtonGroup);\n  var contents = themeBorder && children && Children.map(children, function (child) {\n    if (child && child.type && grommetInputPadNames.indexOf(child.type.displayName) !== -1) {\n      wantContentPad = true;\n    }\n\n    if (child && child.type && grommetInputNames.indexOf(child.type.displayName) !== -1 && child.props.plain === undefined && child.props.focusIndicator === undefined) {\n      return /*#__PURE__*/cloneElement(child, {\n        plain: true,\n        focusIndicator: false\n      });\n    }\n\n    return child;\n  }) || children; // put rest on container, unless we use internal Input\n\n  var containerRest = rest;\n\n  if (inForm) {\n    if (!contents) containerRest = {};\n    contents = contents || /*#__PURE__*/React.createElement(Input, _extends({\n      component: component,\n      disabled: disabled,\n      invalid: !!error,\n      name: name,\n      label: component === CheckBox ? label : undefined\n    }, rest));\n  }\n\n  var themeContentProps = _extends({}, formFieldTheme.content);\n\n  if (!pad && !wantContentPad) {\n    themeContentProps.pad = undefined;\n  }\n\n  if (themeBorder && themeBorder.position === 'inner') {\n    if (error && formFieldTheme.error) {\n      themeContentProps.background = formFieldTheme.error.background;\n    } else if (disabled && formFieldTheme.disabled) {\n      themeContentProps.background = formFieldTheme.disabled.background;\n    }\n  }\n\n  if (!themeBorder) {\n    contents = /*#__PURE__*/React.createElement(Box, _extends({}, themeContentProps, contentProps), contents);\n  }\n\n  var borderColor;\n\n  if (disabled && formFieldTheme.disabled.border && formFieldTheme.disabled.border.color) {\n    borderColor = formFieldTheme.disabled.border.color;\n  } else if (error && themeBorder && themeBorder.error.color) {\n    borderColor = themeBorder.error.color || 'status-critical';\n  } else if (focus && formFieldTheme.focus && formFieldTheme.focus.border && formFieldTheme.focus.border.color) {\n    borderColor = formFieldTheme.focus.border.color;\n  } else {\n    borderColor = themeBorder && themeBorder.color || 'border';\n  }\n\n  var labelStyle = _extends({}, formFieldTheme.label);\n\n  if (disabled) {\n    labelStyle.color = formFieldTheme.disabled && formFieldTheme.disabled.label ? formFieldTheme.disabled.label.color : labelStyle.color;\n  }\n\n  var abut;\n  var abutMargin;\n  var outerStyle = style;\n\n  if (themeBorder) {\n    var innerProps = themeBorder.position === 'inner' ? {\n      border: _extends({}, themeBorder, {\n        side: themeBorder.side || 'bottom',\n        color: borderColor\n      }),\n      round: formFieldTheme.round,\n      focus: focus\n    } : {};\n    contents = /*#__PURE__*/React.createElement(FormFieldContentBox, _extends({}, themeContentProps, innerProps, contentProps), contents);\n    var mergedMargin = margin || formFieldTheme.margin;\n    abut = themeBorder.position === 'outer' && (themeBorder.side === 'all' || themeBorder.side === 'horizontal' || !themeBorder.side) && !(mergedMargin && (typeof mergedMargin === 'string' && mergedMargin !== 'none' || mergedMargin.bottom && mergedMargin.bottom !== 'none' || mergedMargin.horizontal && mergedMargin.horizontal !== 'none'));\n\n    if (abut) {\n      // marginBottom is set to overlap adjacent fields\n      abutMargin = {\n        bottom: '-1px'\n      };\n\n      if (margin) {\n        abutMargin = margin;\n      } else if (themeBorder.size) {\n        // if the user defines a margin,\n        // then the default margin below will be overridden\n        abutMargin = {\n          bottom: \"-\" + parseMetricToNum(theme.global.borderSize[themeBorder.size] || themeBorder.size) + \"px\"\n        };\n      }\n\n      outerStyle = _extends({\n        position: focus ? 'relative' : undefined,\n        zIndex: focus ? 10 : undefined\n      }, style);\n    }\n  }\n\n  var outerBackground;\n\n  if (themeBorder && themeBorder.position === 'outer') {\n    if (error && formFieldTheme.error && formFieldTheme.error.background) {\n      outerBackground = formFieldTheme.error.background;\n    } else if (focus && formFieldTheme.focus && formFieldTheme.focus.background && formFieldTheme.focus.background.color) {\n      outerBackground = formFieldTheme.focus.background.color;\n    } else if (disabled && formFieldTheme.disabled && formFieldTheme.disabled.background) {\n      outerBackground = formFieldTheme.disabled.background;\n    }\n  }\n\n  var outerProps = themeBorder && themeBorder.position === 'outer' ? {\n    border: _extends({}, themeBorder, {\n      color: borderColor\n    }),\n    round: formFieldTheme.round,\n    focus: focus\n  } : {};\n  return /*#__PURE__*/React.createElement(FormFieldBox, _extends({\n    ref: ref,\n    className: className,\n    background: outerBackground,\n    margin: abut ? abutMargin : margin || _extends({}, formFieldTheme.margin)\n  }, outerProps, {\n    style: outerStyle,\n    onFocus: function onFocus(event) {\n      setFocus(true);\n      if (_onFocus) _onFocus(event);\n    },\n    onBlur: function onBlur(event) {\n      setFocus(false);\n      if (contextOnBlur) contextOnBlur(event);\n      if (_onBlur) _onBlur(event);\n    }\n  }, containerRest), label && component !== CheckBox || help ? /*#__PURE__*/React.createElement(React.Fragment, null, label && component !== CheckBox && /*#__PURE__*/React.createElement(Text, _extends({\n    as: \"label\",\n    htmlFor: htmlFor\n  }, labelStyle), label), /*#__PURE__*/React.createElement(Message, _extends({\n    message: help\n  }, formFieldTheme.help))) : undefined, contents, /*#__PURE__*/React.createElement(Message, _extends({\n    message: error\n  }, formFieldTheme.error)), /*#__PURE__*/React.createElement(Message, _extends({\n    message: info\n  }, formFieldTheme.info)));\n});\nFormField.displayName = 'FormField';\nvar FormFieldDoc;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line global-require\n  FormFieldDoc = require('./doc').doc(FormField);\n}\n\nvar FormFieldWrapper = FormFieldDoc || FormField;\nexport { FormFieldWrapper as FormField };","map":{"version":3,"sources":["/Users/erwanbeguin/Documents/Developper/ynov/dataviz/node_modules/grommet/es6/components/FormField/FormField.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","React","Children","cloneElement","forwardRef","useContext","useState","styled","ThemeContext","defaultProps","focusStyle","parseMetricToNum","Box","CheckBox","CheckBoxGroup","RadioButtonGroup","Text","TextInput","FormContext","grommetInputNames","grommetInputPadNames","isGrommetInput","comp","displayName","FormFieldBox","withConfig","componentId","props","focus","justBorder","theme","formField","extend","FormFieldContentBox","Message","_ref","message","rest","createElement","Input","_ref2","component","disabled","invalid","name","_onChange","onChange","formContext","_formContext$useFormI","useFormInput","value","setValue","InputComponent","extraProps","focusIndicator","plain","event","undefined","FormField","_ref3","ref","children","className","contentProps","errorProp","error","help","htmlFor","infoProp","info","label","margin","_onBlur","onBlur","_onFocus","onFocus","pad","required","style","validate","_formContext$useFormF","useFormField","inForm","contextOnBlur","_useState","setFocus","formFieldTheme","themeBorder","border","wantContentPad","contents","map","child","type","containerRest","themeContentProps","content","position","background","borderColor","color","labelStyle","abut","abutMargin","outerStyle","innerProps","side","round","mergedMargin","bottom","horizontal","size","global","borderSize","zIndex","outerBackground","outerProps","Fragment","as","FormFieldDoc","process","env","NODE_ENV","require","doc","FormFieldWrapper"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { Children, cloneElement, forwardRef, useContext, useState } from 'react';\nimport styled, { ThemeContext } from 'styled-components';\nimport { defaultProps } from '../../default-props';\nimport { focusStyle, parseMetricToNum } from '../../utils';\nimport { Box } from '../Box';\nimport { CheckBox } from '../CheckBox';\nimport { CheckBoxGroup } from '../CheckBoxGroup';\nimport { RadioButtonGroup } from '../RadioButtonGroup';\nimport { Text } from '../Text';\nimport { TextInput } from '../TextInput';\nimport { FormContext } from '../Form/FormContext';\nvar grommetInputNames = ['TextInput', 'Select', 'MaskedInput', 'TextArea', 'DateInput'];\nvar grommetInputPadNames = ['CheckBox', 'CheckBoxGroup', 'RadioButtonGroup', 'RangeInput'];\n\nvar isGrommetInput = function isGrommetInput(comp) {\n  return comp && (grommetInputNames.indexOf(comp.displayName) !== -1 || grommetInputPadNames.indexOf(comp.displayName) !== -1);\n};\n\nvar FormFieldBox = styled(Box).withConfig({\n  displayName: \"FormField__FormFieldBox\",\n  componentId: \"m9hood-0\"\n})([\"\", \" \", \"\"], function (props) {\n  return props.focus && focusStyle({\n    justBorder: true\n  });\n}, function (props) {\n  return props.theme.formField && props.theme.formField.extend;\n});\nvar FormFieldContentBox = styled(Box).withConfig({\n  displayName: \"FormField__FormFieldContentBox\",\n  componentId: \"m9hood-1\"\n})([\"\", \"\"], function (props) {\n  return props.focus && focusStyle({\n    justBorder: true\n  });\n});\n\nvar Message = function Message(_ref) {\n  var message = _ref.message,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"message\"]);\n\n  if (message) {\n    if (typeof message === 'string') return /*#__PURE__*/React.createElement(Text, rest, message);\n    return /*#__PURE__*/React.createElement(Box, rest, message);\n  }\n\n  return null;\n};\n\nvar Input = function Input(_ref2) {\n  var component = _ref2.component,\n      disabled = _ref2.disabled,\n      invalid = _ref2.invalid,\n      name = _ref2.name,\n      _onChange = _ref2.onChange,\n      rest = _objectWithoutPropertiesLoose(_ref2, [\"component\", \"disabled\", \"invalid\", \"name\", \"onChange\"]);\n\n  var formContext = useContext(FormContext);\n\n  var _formContext$useFormI = formContext.useFormInput(name, rest.value),\n      value = _formContext$useFormI[0],\n      setValue = _formContext$useFormI[1];\n\n  var InputComponent = component || TextInput; // Grommet input components already check for FormContext\n  // and, using their `name`, end up calling the useFormInput.setValue()\n  // already. For custom components, we expect they will call\n  // this onChange() and we'll call setValue() here, primarily\n  // for backwards compatibility.\n\n  var extraProps = isGrommetInput(InputComponent) ? {\n    focusIndicator: false,\n    onChange: _onChange,\n    plain: true\n  } : {\n    value: value,\n    onChange: function onChange(event) {\n      setValue(event.value !== undefined ? event.value : event.target.value);\n      if (_onChange) _onChange(event);\n    }\n  };\n  return /*#__PURE__*/React.createElement(InputComponent, _extends({\n    name: name,\n    disabled: disabled,\n    \"aria-invalid\": invalid || undefined\n  }, rest, extraProps));\n};\n\nvar FormField = /*#__PURE__*/forwardRef(function (_ref3, ref) {\n  var children = _ref3.children,\n      className = _ref3.className,\n      component = _ref3.component,\n      contentProps = _ref3.contentProps,\n      disabled = _ref3.disabled,\n      errorProp = _ref3.error,\n      help = _ref3.help,\n      htmlFor = _ref3.htmlFor,\n      infoProp = _ref3.info,\n      label = _ref3.label,\n      margin = _ref3.margin,\n      name = _ref3.name,\n      _onBlur = _ref3.onBlur,\n      _onFocus = _ref3.onFocus,\n      pad = _ref3.pad,\n      required = _ref3.required,\n      style = _ref3.style,\n      validate = _ref3.validate,\n      rest = _objectWithoutPropertiesLoose(_ref3, [\"children\", \"className\", \"component\", \"contentProps\", \"disabled\", \"error\", \"help\", \"htmlFor\", \"info\", \"label\", \"margin\", \"name\", \"onBlur\", \"onFocus\", \"pad\", \"required\", \"style\", \"validate\"]);\n\n  var theme = useContext(ThemeContext) || defaultProps.theme;\n  var formContext = useContext(FormContext);\n\n  var _formContext$useFormF = formContext.useFormField({\n    error: errorProp,\n    info: infoProp,\n    name: name,\n    required: required,\n    validate: validate\n  }),\n      error = _formContext$useFormF.error,\n      info = _formContext$useFormF.info,\n      inForm = _formContext$useFormF.inForm,\n      contextOnBlur = _formContext$useFormF.onBlur;\n\n  var _useState = useState(),\n      focus = _useState[0],\n      setFocus = _useState[1];\n\n  var formFieldTheme = theme.formField;\n  var themeBorder = formFieldTheme.border; // This is here for backwards compatibility. In case the child is a grommet\n  // input component, set plain and focusIndicator props, if they aren't\n  // already set.\n\n  var wantContentPad = component && (component === CheckBox || component === CheckBoxGroup || component === RadioButtonGroup);\n  var contents = themeBorder && children && Children.map(children, function (child) {\n    if (child && child.type && grommetInputPadNames.indexOf(child.type.displayName) !== -1) {\n      wantContentPad = true;\n    }\n\n    if (child && child.type && grommetInputNames.indexOf(child.type.displayName) !== -1 && child.props.plain === undefined && child.props.focusIndicator === undefined) {\n      return /*#__PURE__*/cloneElement(child, {\n        plain: true,\n        focusIndicator: false\n      });\n    }\n\n    return child;\n  }) || children; // put rest on container, unless we use internal Input\n\n  var containerRest = rest;\n\n  if (inForm) {\n    if (!contents) containerRest = {};\n    contents = contents || /*#__PURE__*/React.createElement(Input, _extends({\n      component: component,\n      disabled: disabled,\n      invalid: !!error,\n      name: name,\n      label: component === CheckBox ? label : undefined\n    }, rest));\n  }\n\n  var themeContentProps = _extends({}, formFieldTheme.content);\n\n  if (!pad && !wantContentPad) {\n    themeContentProps.pad = undefined;\n  }\n\n  if (themeBorder && themeBorder.position === 'inner') {\n    if (error && formFieldTheme.error) {\n      themeContentProps.background = formFieldTheme.error.background;\n    } else if (disabled && formFieldTheme.disabled) {\n      themeContentProps.background = formFieldTheme.disabled.background;\n    }\n  }\n\n  if (!themeBorder) {\n    contents = /*#__PURE__*/React.createElement(Box, _extends({}, themeContentProps, contentProps), contents);\n  }\n\n  var borderColor;\n\n  if (disabled && formFieldTheme.disabled.border && formFieldTheme.disabled.border.color) {\n    borderColor = formFieldTheme.disabled.border.color;\n  } else if (error && themeBorder && themeBorder.error.color) {\n    borderColor = themeBorder.error.color || 'status-critical';\n  } else if (focus && formFieldTheme.focus && formFieldTheme.focus.border && formFieldTheme.focus.border.color) {\n    borderColor = formFieldTheme.focus.border.color;\n  } else {\n    borderColor = themeBorder && themeBorder.color || 'border';\n  }\n\n  var labelStyle = _extends({}, formFieldTheme.label);\n\n  if (disabled) {\n    labelStyle.color = formFieldTheme.disabled && formFieldTheme.disabled.label ? formFieldTheme.disabled.label.color : labelStyle.color;\n  }\n\n  var abut;\n  var abutMargin;\n  var outerStyle = style;\n\n  if (themeBorder) {\n    var innerProps = themeBorder.position === 'inner' ? {\n      border: _extends({}, themeBorder, {\n        side: themeBorder.side || 'bottom',\n        color: borderColor\n      }),\n      round: formFieldTheme.round,\n      focus: focus\n    } : {};\n    contents = /*#__PURE__*/React.createElement(FormFieldContentBox, _extends({}, themeContentProps, innerProps, contentProps), contents);\n    var mergedMargin = margin || formFieldTheme.margin;\n    abut = themeBorder.position === 'outer' && (themeBorder.side === 'all' || themeBorder.side === 'horizontal' || !themeBorder.side) && !(mergedMargin && (typeof mergedMargin === 'string' && mergedMargin !== 'none' || mergedMargin.bottom && mergedMargin.bottom !== 'none' || mergedMargin.horizontal && mergedMargin.horizontal !== 'none'));\n\n    if (abut) {\n      // marginBottom is set to overlap adjacent fields\n      abutMargin = {\n        bottom: '-1px'\n      };\n\n      if (margin) {\n        abutMargin = margin;\n      } else if (themeBorder.size) {\n        // if the user defines a margin,\n        // then the default margin below will be overridden\n        abutMargin = {\n          bottom: \"-\" + parseMetricToNum(theme.global.borderSize[themeBorder.size] || themeBorder.size) + \"px\"\n        };\n      }\n\n      outerStyle = _extends({\n        position: focus ? 'relative' : undefined,\n        zIndex: focus ? 10 : undefined\n      }, style);\n    }\n  }\n\n  var outerBackground;\n\n  if (themeBorder && themeBorder.position === 'outer') {\n    if (error && formFieldTheme.error && formFieldTheme.error.background) {\n      outerBackground = formFieldTheme.error.background;\n    } else if (focus && formFieldTheme.focus && formFieldTheme.focus.background && formFieldTheme.focus.background.color) {\n      outerBackground = formFieldTheme.focus.background.color;\n    } else if (disabled && formFieldTheme.disabled && formFieldTheme.disabled.background) {\n      outerBackground = formFieldTheme.disabled.background;\n    }\n  }\n\n  var outerProps = themeBorder && themeBorder.position === 'outer' ? {\n    border: _extends({}, themeBorder, {\n      color: borderColor\n    }),\n    round: formFieldTheme.round,\n    focus: focus\n  } : {};\n  return /*#__PURE__*/React.createElement(FormFieldBox, _extends({\n    ref: ref,\n    className: className,\n    background: outerBackground,\n    margin: abut ? abutMargin : margin || _extends({}, formFieldTheme.margin)\n  }, outerProps, {\n    style: outerStyle,\n    onFocus: function onFocus(event) {\n      setFocus(true);\n      if (_onFocus) _onFocus(event);\n    },\n    onBlur: function onBlur(event) {\n      setFocus(false);\n      if (contextOnBlur) contextOnBlur(event);\n      if (_onBlur) _onBlur(event);\n    }\n  }, containerRest), label && component !== CheckBox || help ? /*#__PURE__*/React.createElement(React.Fragment, null, label && component !== CheckBox && /*#__PURE__*/React.createElement(Text, _extends({\n    as: \"label\",\n    htmlFor: htmlFor\n  }, labelStyle), label), /*#__PURE__*/React.createElement(Message, _extends({\n    message: help\n  }, formFieldTheme.help))) : undefined, contents, /*#__PURE__*/React.createElement(Message, _extends({\n    message: error\n  }, formFieldTheme.error)), /*#__PURE__*/React.createElement(Message, _extends({\n    message: info\n  }, formFieldTheme.info)));\n});\nFormField.displayName = 'FormField';\nvar FormFieldDoc;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line global-require\n  FormFieldDoc = require('./doc').doc(FormField);\n}\n\nvar FormFieldWrapper = FormFieldDoc || FormField;\nexport { FormFieldWrapper as FormField };"]},"metadata":{},"sourceType":"module"}