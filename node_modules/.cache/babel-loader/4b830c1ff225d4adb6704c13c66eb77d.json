{"ast":null,"code":"export var findScrollParent = function findScrollParent(element, horizontal) {\n  var result;\n\n  if (element) {\n    var parent = element.parentNode;\n\n    while (!result && parent && parent.getBoundingClientRect) {\n      var rect = parent.getBoundingClientRect(); // 10px is to account for borders and scrollbars in a lazy way\n\n      if (horizontal) {\n        if (rect.width && parent.scrollWidth > rect.width + 10) {\n          result = parent;\n        }\n      } else if (rect.height && parent.scrollHeight > rect.height + 10) {\n        result = parent;\n      }\n\n      parent = parent.parentNode;\n    } // last scrollable element will be the document\n    // if nothing else is scrollable in the page\n\n\n    if (!result) {\n      result = document;\n    } else if (result.tagName.toLowerCase() === 'body') {\n      result = document;\n    }\n  }\n\n  return result;\n};\nexport var findScrollParents = function findScrollParents(element, horizontal) {\n  var result = [];\n\n  if (element) {\n    var parent = element.parentNode;\n\n    while (parent && parent.getBoundingClientRect) {\n      var rect = parent.getBoundingClientRect(); // 10px is to account for borders and scrollbars in a lazy way\n\n      if (horizontal) {\n        if (rect.width && parent.scrollWidth > rect.width + 10) {\n          result.push(parent);\n        }\n      } else if (rect.height && parent.scrollHeight > rect.height + 10) {\n        result.push(parent);\n      }\n\n      parent = parent.parentNode;\n    } // last scrollable element will be the document\n    // if nothing else is scrollable in the page\n\n\n    if (result.length === 0) {\n      result.push(document);\n    } else if (result[0].tagName.toLowerCase() === 'body') {\n      result.length = 0;\n      result.push(document);\n    }\n  }\n\n  return result;\n};\nexport var containsFocus = function containsFocus(node) {\n  var element = document.activeElement;\n\n  while (element) {\n    if (element === node) break;\n    element = element.parentElement;\n  }\n\n  return !!element;\n};\nexport var getFirstFocusableDescendant = function getFirstFocusableDescendant(element) {\n  var children = element.getElementsByTagName('*');\n\n  for (var i = 0; i < children.length; i += 1) {\n    var child = children[i];\n    var tagName = child.tagName.toLowerCase();\n\n    if (tagName === 'input' || tagName === 'select') {\n      return child;\n    }\n  }\n\n  return undefined;\n};\nexport var getBodyChildElements = function getBodyChildElements() {\n  var excludeMatch = /^(script|link)$/i;\n  var children = [];\n  [].forEach.call(document.body.children, function (node) {\n    if (!excludeMatch.test(node.tagName)) {\n      children.push(node);\n    }\n  });\n  return children;\n};\nexport var getNewContainer = function getNewContainer(target, targetChildPosition) {\n  if (target === void 0) {\n    target = document.body;\n  } // setup DOM\n\n\n  var container = document.createElement('div');\n\n  if (targetChildPosition === 'first') {\n    // for SkipLinks\n    target.prepend(container);\n  } else {\n    target.appendChild(container);\n  }\n\n  return container;\n};\nexport var setFocusWithoutScroll = function setFocusWithoutScroll(element) {\n  var x = window.scrollX;\n  var y = window.scrollY;\n  element.focus();\n  window.scrollTo(x, y);\n};\nvar TABINDEX = 'tabindex';\nvar TABINDEX_STATE = 'data-g-tabindex';\nexport var makeNodeFocusable = function makeNodeFocusable(node) {\n  // do not touch aria live containers so that announcements work\n  if (!node.hasAttribute('aria-live')) {\n    node.setAttribute('aria-hidden', false); // allow children to receive focus again\n\n    var elements = node.getElementsByTagName('*'); // only reset elements we've changed in makeNodeUnfocusable()\n\n    Array.prototype.filter.call(elements || [], function (element) {\n      return element.hasAttribute(TABINDEX_STATE);\n    }).forEach(function (element) {\n      var prior = element.getAttribute(TABINDEX_STATE);\n\n      if (prior >= 0) {\n        element.setAttribute(TABINDEX, element.getAttribute(TABINDEX_STATE));\n      } else if (prior === 'none') {\n        element.removeAttribute(TABINDEX);\n      }\n\n      element.removeAttribute(TABINDEX_STATE);\n    });\n  }\n};\nvar autoFocusingTags = /(a|area|input|select|textarea|button|iframe)$/;\nexport var makeNodeUnfocusable = function makeNodeUnfocusable(node) {\n  // do not touch aria live containers so that announcements work\n  if (!node.hasAttribute('aria-live')) {\n    node.setAttribute('aria-hidden', true); // prevent children to receive focus\n\n    var elements = node.getElementsByTagName('*'); // first, save off the tabIndex of any element with one\n\n    Array.prototype.filter.call(elements || [], function (element) {\n      return element.getAttribute(TABINDEX) !== null;\n    }).forEach(function (element) {\n      element.setAttribute(TABINDEX_STATE, element.getAttribute(TABINDEX));\n      element.setAttribute(TABINDEX, -1);\n    }); // then, if any element is inherently focusable and not handled above,\n    // give it a tabIndex of -1 so it can't receive focus\n\n    Array.prototype.filter.call(elements || [], function (element) {\n      var currentTag = element.tagName.toLowerCase();\n      return currentTag.match(autoFocusingTags) && element.focus && element.getAttribute(TABINDEX_STATE) === null;\n    }).forEach(function (element) {\n      element.setAttribute(TABINDEX_STATE, 'none');\n      element.setAttribute(TABINDEX, -1);\n    });\n  }\n};\nexport var findVisibleParent = function findVisibleParent(element) {\n  if (element) {\n    return element.offsetParent ? element : findVisibleParent(element.parentElement) || element;\n  }\n\n  return undefined;\n};\nexport var isNodeAfterScroll = function isNodeAfterScroll(node, target) {\n  var _node$getBoundingClie = node.getBoundingClientRect(),\n      bottom = _node$getBoundingClie.bottom; // target will be the document from findScrollParent()\n\n\n  var _ref = target.getBoundingClientRect ? target.getBoundingClientRect() : {\n    height: 0,\n    top: 0\n  },\n      height = _ref.height,\n      top = _ref.top;\n\n  return bottom >= top + height;\n};\nexport var isNodeBeforeScroll = function isNodeBeforeScroll(node, target) {\n  var _node$getBoundingClie2 = node.getBoundingClientRect(),\n      top = _node$getBoundingClie2.top; // target will be the document from findScrollParent()\n\n\n  var _ref2 = target.getBoundingClientRect ? target.getBoundingClientRect() : {\n    top: 0\n  },\n      targetTop = _ref2.top;\n\n  return top <= targetTop;\n};","map":{"version":3,"sources":["/Users/erwanbeguin/Documents/Developper/ynov/dataviz/node_modules/grommet/es6/utils/DOM.js"],"names":["findScrollParent","element","horizontal","result","parent","parentNode","getBoundingClientRect","rect","width","scrollWidth","height","scrollHeight","document","tagName","toLowerCase","findScrollParents","push","length","containsFocus","node","activeElement","parentElement","getFirstFocusableDescendant","children","getElementsByTagName","i","child","undefined","getBodyChildElements","excludeMatch","forEach","call","body","test","getNewContainer","target","targetChildPosition","container","createElement","prepend","appendChild","setFocusWithoutScroll","x","window","scrollX","y","scrollY","focus","scrollTo","TABINDEX","TABINDEX_STATE","makeNodeFocusable","hasAttribute","setAttribute","elements","Array","prototype","filter","prior","getAttribute","removeAttribute","autoFocusingTags","makeNodeUnfocusable","currentTag","match","findVisibleParent","offsetParent","isNodeAfterScroll","_node$getBoundingClie","bottom","_ref","top","isNodeBeforeScroll","_node$getBoundingClie2","_ref2","targetTop"],"mappings":"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","sourcesContent":["export var findScrollParent = function findScrollParent(element, horizontal) {\n  var result;\n\n  if (element) {\n    var parent = element.parentNode;\n\n    while (!result && parent && parent.getBoundingClientRect) {\n      var rect = parent.getBoundingClientRect(); // 10px is to account for borders and scrollbars in a lazy way\n\n      if (horizontal) {\n        if (rect.width && parent.scrollWidth > rect.width + 10) {\n          result = parent;\n        }\n      } else if (rect.height && parent.scrollHeight > rect.height + 10) {\n        result = parent;\n      }\n\n      parent = parent.parentNode;\n    } // last scrollable element will be the document\n    // if nothing else is scrollable in the page\n\n\n    if (!result) {\n      result = document;\n    } else if (result.tagName.toLowerCase() === 'body') {\n      result = document;\n    }\n  }\n\n  return result;\n};\nexport var findScrollParents = function findScrollParents(element, horizontal) {\n  var result = [];\n\n  if (element) {\n    var parent = element.parentNode;\n\n    while (parent && parent.getBoundingClientRect) {\n      var rect = parent.getBoundingClientRect(); // 10px is to account for borders and scrollbars in a lazy way\n\n      if (horizontal) {\n        if (rect.width && parent.scrollWidth > rect.width + 10) {\n          result.push(parent);\n        }\n      } else if (rect.height && parent.scrollHeight > rect.height + 10) {\n        result.push(parent);\n      }\n\n      parent = parent.parentNode;\n    } // last scrollable element will be the document\n    // if nothing else is scrollable in the page\n\n\n    if (result.length === 0) {\n      result.push(document);\n    } else if (result[0].tagName.toLowerCase() === 'body') {\n      result.length = 0;\n      result.push(document);\n    }\n  }\n\n  return result;\n};\nexport var containsFocus = function containsFocus(node) {\n  var element = document.activeElement;\n\n  while (element) {\n    if (element === node) break;\n    element = element.parentElement;\n  }\n\n  return !!element;\n};\nexport var getFirstFocusableDescendant = function getFirstFocusableDescendant(element) {\n  var children = element.getElementsByTagName('*');\n\n  for (var i = 0; i < children.length; i += 1) {\n    var child = children[i];\n    var tagName = child.tagName.toLowerCase();\n\n    if (tagName === 'input' || tagName === 'select') {\n      return child;\n    }\n  }\n\n  return undefined;\n};\nexport var getBodyChildElements = function getBodyChildElements() {\n  var excludeMatch = /^(script|link)$/i;\n  var children = [];\n  [].forEach.call(document.body.children, function (node) {\n    if (!excludeMatch.test(node.tagName)) {\n      children.push(node);\n    }\n  });\n  return children;\n};\nexport var getNewContainer = function getNewContainer(target, targetChildPosition) {\n  if (target === void 0) {\n    target = document.body;\n  }\n\n  // setup DOM\n  var container = document.createElement('div');\n\n  if (targetChildPosition === 'first') {\n    // for SkipLinks\n    target.prepend(container);\n  } else {\n    target.appendChild(container);\n  }\n\n  return container;\n};\nexport var setFocusWithoutScroll = function setFocusWithoutScroll(element) {\n  var x = window.scrollX;\n  var y = window.scrollY;\n  element.focus();\n  window.scrollTo(x, y);\n};\nvar TABINDEX = 'tabindex';\nvar TABINDEX_STATE = 'data-g-tabindex';\nexport var makeNodeFocusable = function makeNodeFocusable(node) {\n  // do not touch aria live containers so that announcements work\n  if (!node.hasAttribute('aria-live')) {\n    node.setAttribute('aria-hidden', false); // allow children to receive focus again\n\n    var elements = node.getElementsByTagName('*'); // only reset elements we've changed in makeNodeUnfocusable()\n\n    Array.prototype.filter.call(elements || [], function (element) {\n      return element.hasAttribute(TABINDEX_STATE);\n    }).forEach(function (element) {\n      var prior = element.getAttribute(TABINDEX_STATE);\n\n      if (prior >= 0) {\n        element.setAttribute(TABINDEX, element.getAttribute(TABINDEX_STATE));\n      } else if (prior === 'none') {\n        element.removeAttribute(TABINDEX);\n      }\n\n      element.removeAttribute(TABINDEX_STATE);\n    });\n  }\n};\nvar autoFocusingTags = /(a|area|input|select|textarea|button|iframe)$/;\nexport var makeNodeUnfocusable = function makeNodeUnfocusable(node) {\n  // do not touch aria live containers so that announcements work\n  if (!node.hasAttribute('aria-live')) {\n    node.setAttribute('aria-hidden', true); // prevent children to receive focus\n\n    var elements = node.getElementsByTagName('*'); // first, save off the tabIndex of any element with one\n\n    Array.prototype.filter.call(elements || [], function (element) {\n      return element.getAttribute(TABINDEX) !== null;\n    }).forEach(function (element) {\n      element.setAttribute(TABINDEX_STATE, element.getAttribute(TABINDEX));\n      element.setAttribute(TABINDEX, -1);\n    }); // then, if any element is inherently focusable and not handled above,\n    // give it a tabIndex of -1 so it can't receive focus\n\n    Array.prototype.filter.call(elements || [], function (element) {\n      var currentTag = element.tagName.toLowerCase();\n      return currentTag.match(autoFocusingTags) && element.focus && element.getAttribute(TABINDEX_STATE) === null;\n    }).forEach(function (element) {\n      element.setAttribute(TABINDEX_STATE, 'none');\n      element.setAttribute(TABINDEX, -1);\n    });\n  }\n};\nexport var findVisibleParent = function findVisibleParent(element) {\n  if (element) {\n    return element.offsetParent ? element : findVisibleParent(element.parentElement) || element;\n  }\n\n  return undefined;\n};\nexport var isNodeAfterScroll = function isNodeAfterScroll(node, target) {\n  var _node$getBoundingClie = node.getBoundingClientRect(),\n      bottom = _node$getBoundingClie.bottom; // target will be the document from findScrollParent()\n\n\n  var _ref = target.getBoundingClientRect ? target.getBoundingClientRect() : {\n    height: 0,\n    top: 0\n  },\n      height = _ref.height,\n      top = _ref.top;\n\n  return bottom >= top + height;\n};\nexport var isNodeBeforeScroll = function isNodeBeforeScroll(node, target) {\n  var _node$getBoundingClie2 = node.getBoundingClientRect(),\n      top = _node$getBoundingClie2.top; // target will be the document from findScrollParent()\n\n\n  var _ref2 = target.getBoundingClientRect ? target.getBoundingClientRect() : {\n    top: 0\n  },\n      targetTop = _ref2.top;\n\n  return top <= targetTop;\n};"]},"metadata":{},"sourceType":"module"}